{"/home/travis/build/npmtest/node-npmtest-stylint/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_stylint */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-stylint/lib.npmtest_stylint.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/lib.npmtest_stylint.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_stylint */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_stylint = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_stylint = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-stylint/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":65},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-stylint && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_stylint */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_stylint","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_stylint.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_stylint.rollup.js'] =","            local.assetsDict['/assets.npmtest_stylint.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_stylint.__dirname + '/lib.npmtest_stylint.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":49}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":21},"end":{"line":30,"column":32}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":29}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":31},"end":{"line":72,"column":42}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":24}},"3":{"start":{"line":25,"column":0},"end":{"line":75,"column":1}},"4":{"start":{"line":26,"column":1},"end":{"line":74,"column":2}},"5":{"start":{"line":31,"column":3},"end":{"line":31,"column":17}},"6":{"start":{"line":32,"column":3},"end":{"line":37,"column":4}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":52}},"8":{"start":{"line":40,"column":3},"end":{"line":45,"column":4}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":26}},"10":{"start":{"line":43,"column":8},"end":{"line":45,"column":4}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":26}},"12":{"start":{"line":51,"column":3},"end":{"line":69,"column":4}},"13":{"start":{"line":54,"column":4},"end":{"line":54,"column":42}},"14":{"start":{"line":57,"column":4},"end":{"line":68,"column":5}},"15":{"start":{"line":58,"column":5},"end":{"line":58,"column":77}},"16":{"start":{"line":59,"column":5},"end":{"line":64,"column":9}},"17":{"start":{"line":63,"column":7},"end":{"line":63,"column":15}},"18":{"start":{"line":71,"column":3},"end":{"line":71,"column":66}},"19":{"start":{"line":72,"column":3},"end":{"line":72,"column":44}},"20":{"start":{"line":77,"column":0},"end":{"line":77,"column":24}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":3},"end":{"line":40,"column":3}},{"start":{"line":40,"column":3},"end":{"line":40,"column":3}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"3":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":13},"end":{"line":43,"column":34}},{"start":{"line":43,"column":38},"end":{"line":43,"column":62}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":3},"end":{"line":51,"column":3}},{"start":{"line":51,"column":3},"end":{"line":51,"column":3}}]},"5":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":20}},{"start":{"line":52,"column":5},"end":{"line":52,"column":45}},{"start":{"line":53,"column":5},"end":{"line":53,"column":39}}]},"6":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":52},"end":{"line":71,"column":58}},{"start":{"line":71,"column":61},"end":{"line":71,"column":66}}]},"7":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":19},"end":{"line":72,"column":27}},{"start":{"line":72,"column":31},"end":{"line":72,"column":44}}]}},"code":["'use strict'","","// our stampit modules","var stampit = require( 'stampit' )","var fs = require( 'fs' )","","// let there be light ( * )","// basically, with stampit we take a bunch of different objects","// and methods and compose them into one mega object, the app","// appropriately namespaced, with methods on the prototype,","// and `this` set consistently (ie, available throughout the app)","//","// basic app flow below","// init() -> read() -> parse() -> lint() -> done()","// init() -> watch() -> read() -> parse() -> lint() -> done()","","","/**"," * main stylint kickoff function"," * @param {string} path   [custom path if used programmatically]"," * @param {object} config [config if used programmatically]"," * @param {function} [callback] [a callback called just before exiting the process if not watching]"," * @return {Object} [the composed stylint object]"," */","var Stylint = function( path, config, callback ) {","\treturn stampit().compose(","\t\trequire( './src/core/' ),","\t\trequire( './src/checks/' ),","\t\trequire( './src/state/' ),","\t\tstampit().enclose( function() {","\t\t\tvar pkg = null","\t\t\ttry {","\t\t\t\tpkg = require( process.cwd() + '/package.json' )","\t\t\t}","\t\t\tcatch ( err ) {","\t\t\t\t// no output","\t\t\t}","","\t\t\t// set safe path defaults","\t\t\tif ( typeof path === 'undefined' ) {","\t\t\t\tthis.state.path = './'","\t\t\t}","\t\t\telse if ( path instanceof Array || typeof path === 'string' ) {","\t\t\t\tthis.state.path = path","\t\t\t}","","\t\t\t// look for a stylintignore array","\t\t\t// for ignoring specific files","\t\t\t// first look in package.json","\t\t\t// then look for .stylintignore in the main dir","\t\t\tif ( pkg !== null &&","\t\t\t\t\ttypeof pkg.stylintignore !== 'undefined' &&","\t\t\t\t\tpkg.stylintignore instanceof Array ) {","\t\t\t\tthis.state.exclude = pkg.stylintignore","\t\t\t}","\t\t\telse {","\t\t\t\ttry {","\t\t\t\t\tvar stylintIgnore = fs.readFileSync( process.cwd() + '/.stylintignore' )","\t\t\t\t\tthis.state.exclude = stylintIgnore","\t\t\t\t\t\t.toString()","\t\t\t\t\t\t.split( '\\n' )","\t\t\t\t\t\t.filter( function( d ) {","\t\t\t\t\t\t\treturn d","\t\t\t\t\t\t} )","\t\t\t\t}","\t\t\t\tcatch ( err ) {","\t\t\t\t\t// do no-thing","\t\t\t\t}","\t\t\t}","","\t\t\tthis.customConfig = typeof config === 'object' ? config : false","\t\t\tthis.callback = callback || function() {}","\t\t} ).enclose( require( './src/core/init' ) )","\t)","}","","module.exports = Stylint",""],"l":{"4":1,"5":1,"25":1,"26":0,"31":0,"32":0,"33":0,"40":0,"41":0,"43":0,"44":0,"51":0,"54":0,"57":0,"58":0,"59":0,"63":0,"71":0,"72":0,"77":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/blocks.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/blocks.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":11,"column":0},"end":{"line":33,"column":1}},"3":{"start":{"line":12,"column":1},"end":{"line":12,"column":45}},"4":{"start":{"line":12,"column":37},"end":{"line":12,"column":44}},"5":{"start":{"line":14,"column":1},"end":{"line":14,"column":10}},"6":{"start":{"line":15,"column":1},"end":{"line":15,"column":37}},"7":{"start":{"line":18,"column":1},"end":{"line":23,"column":2}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":15}},"9":{"start":{"line":21,"column":6},"end":{"line":23,"column":2}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":14}},"11":{"start":{"line":25,"column":1},"end":{"line":30,"column":2}},"12":{"start":{"line":26,"column":2},"end":{"line":26,"column":64}},"13":{"start":{"line":28,"column":6},"end":{"line":30,"column":2}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":44}},"15":{"start":{"line":32,"column":1},"end":{"line":32,"column":13}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":23}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},{"start":{"line":12,"column":1},"end":{"line":12,"column":1}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},{"start":{"line":18,"column":1},"end":{"line":18,"column":1}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":18}},{"start":{"line":18,"column":22},"end":{"line":18,"column":42}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":6}},{"start":{"line":21,"column":6},"end":{"line":21,"column":6}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},{"start":{"line":25,"column":1},"end":{"line":25,"column":1}}]},"6":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":34}},{"start":{"line":25,"column":38},"end":{"line":25,"column":53}}]},"7":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"8":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":11},"end":{"line":28,"column":38}},{"start":{"line":28,"column":42},"end":{"line":28,"column":56}}]}},"code":["'use strict'","","var eqEndRe = /=$|=\\s$/","","","/**"," * @description depending on settings, enforce of disallow @block when defining block vars"," * @param {string} [line] curr line being linted"," * @returns {boolean | undefined} true if @block found, false if not, undefined if we skip"," */","var blocks = function( line ) {","\tif ( line.indexOf( '=' ) === -1 ) { return }","","\tvar block","\tvar index = line.indexOf( '@block' )","","\t// if = ends the line and not a block var or hash","\tif ( index === -1 && eqEndRe.test( line ) ) {","\t\tblock = false","\t}","\telse if ( index !== -1 ) {","\t\tblock = true","\t}","","\tif ( this.state.conf === 'always' && block === false ) {","\t\tthis.msg( 'block variables must include @block', line.length )","\t}","\telse if ( this.state.conf === 'never' && block === true ) {","\t\tthis.msg( '@block is not allowed', index )","\t}","","\treturn block","}","","module.exports = blocks",""],"l":{"3":1,"11":1,"12":0,"14":0,"15":0,"18":0,"19":0,"21":0,"22":0,"25":0,"26":0,"28":0,"29":0,"32":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/brackets.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/brackets.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":32}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":32},"end":{"line":53,"column":48}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":48},"end":{"line":57,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":93}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":47}},"5":{"start":{"line":14,"column":0},"end":{"line":85,"column":1}},"6":{"start":{"line":20,"column":1},"end":{"line":25,"column":2}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":8}},"8":{"start":{"line":27,"column":1},"end":{"line":27,"column":19}},"9":{"start":{"line":28,"column":1},"end":{"line":28,"column":18}},"10":{"start":{"line":29,"column":1},"end":{"line":29,"column":20}},"11":{"start":{"line":30,"column":1},"end":{"line":30,"column":20}},"12":{"start":{"line":32,"column":1},"end":{"line":75,"column":2}},"13":{"start":{"line":34,"column":2},"end":{"line":43,"column":3}},"14":{"start":{"line":37,"column":3},"end":{"line":37,"column":17}},"15":{"start":{"line":41,"column":7},"end":{"line":43,"column":3}},"16":{"start":{"line":42,"column":3},"end":{"line":42,"column":17}},"17":{"start":{"line":45,"column":6},"end":{"line":75,"column":2}},"18":{"start":{"line":47,"column":2},"end":{"line":74,"column":3}},"19":{"start":{"line":48,"column":3},"end":{"line":48,"column":61}},"20":{"start":{"line":50,"column":3},"end":{"line":60,"column":4}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":49}},"22":{"start":{"line":53,"column":4},"end":{"line":55,"column":20}},"23":{"start":{"line":54,"column":5},"end":{"line":54,"column":72}},"24":{"start":{"line":57,"column":4},"end":{"line":59,"column":7}},"25":{"start":{"line":58,"column":5},"end":{"line":58,"column":28}},"26":{"start":{"line":63,"column":3},"end":{"line":63,"column":74}},"27":{"start":{"line":63,"column":66},"end":{"line":63,"column":73}},"28":{"start":{"line":65,"column":3},"end":{"line":73,"column":4}},"29":{"start":{"line":66,"column":4},"end":{"line":66,"column":18}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":33}},"31":{"start":{"line":70,"column":8},"end":{"line":73,"column":4}},"32":{"start":{"line":71,"column":4},"end":{"line":71,"column":18}},"33":{"start":{"line":72,"column":4},"end":{"line":72,"column":34}},"34":{"start":{"line":77,"column":1},"end":{"line":82,"column":2}},"35":{"start":{"line":78,"column":2},"end":{"line":78,"column":56}},"36":{"start":{"line":80,"column":6},"end":{"line":82,"column":2}},"37":{"start":{"line":81,"column":2},"end":{"line":81,"column":72}},"38":{"start":{"line":84,"column":1},"end":{"line":84,"column":15}},"39":{"start":{"line":87,"column":0},"end":{"line":87,"column":25}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},{"start":{"line":20,"column":1},"end":{"line":20,"column":1}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":26}},{"start":{"line":21,"column":2},"end":{"line":21,"column":26}},{"start":{"line":22,"column":2},"end":{"line":22,"column":23}},{"start":{"line":23,"column":2},"end":{"line":23,"column":23}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},{"start":{"line":32,"column":1},"end":{"line":32,"column":1}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":7},"end":{"line":34,"column":33}},{"start":{"line":35,"column":3},"end":{"line":35,"column":29}},{"start":{"line":36,"column":3},"end":{"line":36,"column":29}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":7},"end":{"line":41,"column":7}},{"start":{"line":41,"column":7},"end":{"line":41,"column":7}}]},"7":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":38}},{"start":{"line":41,"column":42},"end":{"line":41,"column":68}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"9":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"10":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":3},"end":{"line":50,"column":3}},{"start":{"line":50,"column":3},"end":{"line":50,"column":3}}]},"11":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":26}},{"start":{"line":54,"column":30},"end":{"line":54,"column":72}}]},"12":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":3},"end":{"line":63,"column":3}},{"start":{"line":63,"column":3},"end":{"line":63,"column":3}}]},"13":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":41}},{"start":{"line":63,"column":45},"end":{"line":63,"column":50}},{"start":{"line":63,"column":54},"end":{"line":63,"column":61}}]},"14":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":3},"end":{"line":65,"column":3}},{"start":{"line":65,"column":3},"end":{"line":65,"column":3}}]},"15":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"16":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":13},"end":{"line":70,"column":39}},{"start":{"line":70,"column":43},"end":{"line":70,"column":65}}]},"17":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},{"start":{"line":77,"column":1},"end":{"line":77,"column":1}}]},"18":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":33}},{"start":{"line":77,"column":37},"end":{"line":77,"column":53}}]},"19":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"20":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":11},"end":{"line":80,"column":39}},{"start":{"line":80,"column":43},"end":{"line":80,"column":60}}]}},"code":["'use strict'","","var ignoreRe = /\\(.*\\)|@extend|\\(|if|for(?!\\w)|else|return|@block|@media|@import|@require|,$/","var stripRe = /(?=\\S)\\[\\S+\\]|(\\.|#)\\w+/","var equalsRe = /( =|\\?=|\\+=|-=)+/","var validJSON = require( '../data/valid.json' )","","","/**"," * @description check for brackets"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if bracket found, false if not"," */","var brackets = function( line ) {","\t// in order if:","\t// 1 in hash or css block","\t// 2 variable or hash or block","\t// 3 mixin","\t// 4 .selector,","\tif ( this.state.hashOrCSS ||","\t\tline.trim().length === 0 ||","\t\tequalsRe.test( line ) ||","\t\tignoreRe.test( line ) ) {","\t\treturn","\t}","","\tvar arr = ['hint']","\tvar isCSS = false","\tvar isMixin = false","\tvar bracket = false","","\tif ( this.state.conf === 'never' ) {","\t\t// ex: $hash = { is ok but .class = { is not","\t\tif ( line.indexOf( '{' ) !== -1 &&","\t\t\tline.indexOf( '=' ) === -1 &&","\t\t\tline.indexOf( '}' ) === -1 ) {","\t\t\tbracket = true","\t\t}","\t\t// ex: } is okay if ending a hash. otherwise it is NOT okay","\t\t// one liners are lame but ok ( check for = { )","\t\telse if ( line.indexOf( '}' ) !== -1 && line.indexOf( '{' ) === -1 ) {","\t\t\tbracket = true","\t\t}","\t}","\telse if ( this.state.conf === 'always' ) {","","\t\tif ( bracket === false ) {","\t\t\tarr = this.splitAndStrip( new RegExp( /[\\s\\t,:]/ ), line )","","\t\t\tif ( typeof arr[0] !== 'undefined' ) {","\t\t\t\tarr[0] = arr[0].replace( stripRe, '' ).trim()","","\t\t\t\tisCSS = validJSON.css.some( function( css ) {","\t\t\t\t\treturn arr[0] === css || this.checkPrefix( arr[0], css, validJSON )","\t\t\t\t}.bind( this ) )","","\t\t\t\tisMixin = this.cache.customProperties.some( function( mixin ) {","\t\t\t\t\treturn arr[0] === mixin","\t\t\t\t} )","\t\t\t}","","\t\t\t// basically, we don't care about properties like margin or padding","\t\t\tif ( line.trim().indexOf( '}' ) !== -1 || isCSS || isMixin ) { return }","","\t\t\tif ( line.indexOf( '{' ) !== -1 ) {","\t\t\t\tbracket = true","\t\t\t\tthis.state.openBracket = true","\t\t\t}","\t\t\t// ex: } is okay if ending a hash. otherwise it is NOT okay","\t\t\telse if ( line.indexOf( '}' ) !== -1 && this.state.openBracket ) {","\t\t\t\tbracket = true","\t\t\t\tthis.state.openBracket = false","\t\t\t}","\t\t}","\t}","","\tif ( this.state.conf === 'never' && bracket === true ) {","\t\tthis.msg( 'unnecessary bracket', line.indexOf( '{' ) )","\t}","\telse if ( this.state.conf === 'always' && bracket === false ) {","\t\tthis.msg( 'always use brackets when defining selectors', line.length )","\t}","","\treturn bracket","}","","module.exports = brackets",""],"l":{"3":1,"4":1,"5":1,"6":1,"14":1,"20":0,"24":0,"27":0,"28":0,"29":0,"30":0,"32":0,"34":0,"37":0,"41":0,"42":0,"45":0,"47":0,"48":0,"50":0,"51":0,"53":0,"54":0,"57":0,"58":0,"63":0,"65":0,"66":0,"67":0,"70":0,"71":0,"72":0,"77":0,"78":0,"80":0,"81":0,"84":0,"87":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/colons.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/colons.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":30}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":37},"end":{"line":33,"column":53}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":35},"end":{"line":38,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":150}},"3":{"start":{"line":13,"column":0},"end":{"line":55,"column":1}},"4":{"start":{"line":14,"column":1},"end":{"line":14,"column":68}},"5":{"start":{"line":14,"column":60},"end":{"line":14,"column":67}},"6":{"start":{"line":16,"column":1},"end":{"line":16,"column":10}},"7":{"start":{"line":17,"column":1},"end":{"line":17,"column":22}},"8":{"start":{"line":18,"column":1},"end":{"line":18,"column":21}},"9":{"start":{"line":19,"column":1},"end":{"line":19,"column":57}},"10":{"start":{"line":21,"column":1},"end":{"line":45,"column":2}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":15}},"12":{"start":{"line":28,"column":6},"end":{"line":45,"column":2}},"13":{"start":{"line":33,"column":2},"end":{"line":35,"column":5}},"14":{"start":{"line":34,"column":3},"end":{"line":34,"column":36}},"15":{"start":{"line":38,"column":2},"end":{"line":40,"column":5}},"16":{"start":{"line":39,"column":3},"end":{"line":39,"column":36}},"17":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"18":{"start":{"line":43,"column":3},"end":{"line":43,"column":15}},"19":{"start":{"line":47,"column":1},"end":{"line":52,"column":2}},"20":{"start":{"line":48,"column":2},"end":{"line":48,"column":71}},"21":{"start":{"line":50,"column":6},"end":{"line":52,"column":2}},"22":{"start":{"line":51,"column":2},"end":{"line":51,"column":60}},"23":{"start":{"line":54,"column":1},"end":{"line":54,"column":13}},"24":{"start":{"line":57,"column":0},"end":{"line":57,"column":23}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":27}},{"start":{"line":14,"column":31},"end":{"line":14,"column":55}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":34}},{"start":{"line":22,"column":2},"end":{"line":22,"column":16}},{"start":{"line":23,"column":2},"end":{"line":23,"column":30}},{"start":{"line":24,"column":2},"end":{"line":24,"column":30}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"6":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":11},"end":{"line":28,"column":27}},{"start":{"line":29,"column":2},"end":{"line":29,"column":29}},{"start":{"line":30,"column":2},"end":{"line":30,"column":28}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"8":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":7},"end":{"line":42,"column":17}},{"start":{"line":42,"column":21},"end":{"line":42,"column":30}}]},"9":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},{"start":{"line":47,"column":1},"end":{"line":47,"column":1}}]},"10":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":34}},{"start":{"line":47,"column":38},"end":{"line":47,"column":53}}]},"11":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"12":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":11},"end":{"line":50,"column":38}},{"start":{"line":50,"column":42},"end":{"line":50,"column":56}}]}},"code":["'use strict'","","var validJSON = require( '../data/valid.json' )","// we only want to check colons on properties/values","var ignoreRe = /( ^[&$=#>.]|\\.[a-zA-Z]|#[a-zA-Z]| \\+ | , | = | ~ | > | &| {|}|\\(|if|for(?!\\w)|else|return|@block|@media|@import|@extend|@require|,$)/m","","","/**"," * @description check for colons"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if colon found, false if not"," */","var colons = function( line ) {","\tif ( ignoreRe.test( line ) || this.state.context === 0 ) { return }","","\tvar colon","\tvar hasPseudo = false","\tvar hasScope = false","\tvar arr = this.splitAndStrip( new RegExp( /\\s/ ), line )","","\tif ( this.state.conf === 'always' &&","\t\tarr.length > 1 &&","\t\tarr[0].indexOf( ':' ) === -1 &&","\t\tarr[0].indexOf( ',' ) === -1 ) {","\t\tcolon = false","\t}","\t// : is allowed in hashes","\telse if ( !this.state.hash &&","\t\tthis.state.conf === 'never' &&","\t\tline.indexOf( ':' ) !== -1 ) {","","\t\t// check for pseudo selector","\t\thasPseudo = validJSON.pseudo.some( function( val ) {","\t\t\treturn line.indexOf( val ) !== -1","\t\t} )","","\t\t// check for scope selector","\t\thasScope = validJSON.scope.some( function( val ) {","\t\t\treturn line.indexOf( val ) !== -1","\t\t} )","","\t\tif ( !hasPseudo && !hasScope ) {","\t\t\tcolon = true","\t\t}","\t}","","\tif ( this.state.conf === 'always' && colon === false ) {","\t\tthis.msg( 'missing colon between property and value', arr[0].length )","\t}","\telse if ( this.state.conf === 'never' && colon === true ) {","\t\tthis.msg( 'unnecessary colon found', line.indexOf( ':' ) )","\t}","","\treturn colon","}","","module.exports = colons",""],"l":{"3":1,"5":1,"13":1,"14":0,"16":0,"17":0,"18":0,"19":0,"21":0,"25":0,"28":0,"33":0,"34":0,"38":0,"39":0,"42":0,"43":0,"47":0,"48":0,"50":0,"51":0,"54":0,"57":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/colors.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/colors.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":12,"column":0},"end":{"line":28,"column":1}},"4":{"start":{"line":13,"column":1},"end":{"line":13,"column":59}},"5":{"start":{"line":13,"column":51},"end":{"line":13,"column":58}},"6":{"start":{"line":15,"column":1},"end":{"line":15,"column":16}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":31}},"8":{"start":{"line":19,"column":1},"end":{"line":21,"column":2}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":12}},"10":{"start":{"line":23,"column":1},"end":{"line":25,"column":2}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":67}},"12":{"start":{"line":27,"column":1},"end":{"line":27,"column":11}},"13":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":27}},{"start":{"line":13,"column":31},"end":{"line":13,"column":46}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},{"start":{"line":23,"column":1},"end":{"line":23,"column":1}}]}},"code":["'use strict'","","var hexRe = /#(?:[0-9a-f]{3}){1,2}/im","var ignoreRe = /^\\s*(?:#|.*=.*)/","","","/**"," * @description if we disallowed hex colors, check for them and return true if found"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if hex color found, false if not"," */","var colors = function( line ) {","\tif ( ignoreRe.test( line ) || this.state.root ) { return }","","\tvar hex = false","\tvar match = hexRe.exec( line )","","\t// so basically if we're using #hex colors outside of a var declaration","\tif ( match !== null ) {","\t\thex = true","\t}","","\tif ( hex === true ) {","\t\tthis.msg( 'hexidecimal color should be a variable', match.index )","\t}","","\treturn hex","}","","module.exports = colors",""],"l":{"3":1,"4":1,"12":1,"13":0,"15":0,"16":0,"19":0,"20":0,"23":0,"24":0,"27":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/commaSpace.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/commaSpace.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":44}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":21}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"4":{"start":{"line":14,"column":0},"end":{"line":41,"column":1}},"5":{"start":{"line":19,"column":1},"end":{"line":22,"column":2}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":8}},"7":{"start":{"line":26,"column":1},"end":{"line":26,"column":66}},"8":{"start":{"line":28,"column":1},"end":{"line":28,"column":44}},"9":{"start":{"line":29,"column":1},"end":{"line":29,"column":47}},"10":{"start":{"line":32,"column":1},"end":{"line":38,"column":2}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":81}},"12":{"start":{"line":36,"column":6},"end":{"line":38,"column":2}},"13":{"start":{"line":37,"column":2},"end":{"line":37,"column":67}},"14":{"start":{"line":40,"column":1},"end":{"line":40,"column":34}},"15":{"start":{"line":43,"column":0},"end":{"line":43,"column":27}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":36}},{"start":{"line":20,"column":2},"end":{"line":20,"column":56}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},{"start":{"line":32,"column":1},"end":{"line":32,"column":1}}]},"4":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":34}},{"start":{"line":32,"column":38},"end":{"line":32,"column":45}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"6":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":38}},{"start":{"line":36,"column":42},"end":{"line":36,"column":50}}]},"7":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":19}},{"start":{"line":40,"column":23},"end":{"line":40,"column":32}}]}},"code":["'use strict'","","// if , is present on line and its not followed by a space","var noSpaceRe = /,\\S/","var withSpaceRe = /,\\s/","var removeQuotesRe = /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/g","","/**"," * @description if set to always, enforces spaces after commas. if set to never, disallows spaces"," * @param {string} [line] curr line being linted"," * @param {string} [origLine] curr line before being stripped"," * @returns {boolean} true if space missing, false if not"," */","var commaSpace = function( line, origLine ) {","\t// conditions where testing isn't needed.","\t// 1: no comma on line at all","\t// 2: comma ends the line, as in a list","\t// 3: comma is","\tif ( origLine.indexOf( ',' ) === -1 ||","\t\torigLine.trim().indexOf( ',' ) === origLine.length - 1 ) {","\t\treturn","\t}","","\t// just strip content between quotes, leave rest of syntax intact","\t// this is so we don't get false positives with , in strings","\tvar trimmedLine = origLine.replace( removeQuotesRe, '\"\"' ).trim()","","\tvar noSpace = noSpaceRe.exec( trimmedLine )","\tvar hasSpace = withSpaceRe.exec( trimmedLine )","","\t// if spaces should be follow commas, but there is no space on the line","\tif ( this.state.conf === 'always' && noSpace ) {","\t\tthis.msg( 'commas must be followed by a space for readability', noSpace.index )","\t}","\t// if spaces should not be followed by a comma, but there are spaces anyway","\telse if ( this.state.conf === 'never' && hasSpace ) {","\t\tthis.msg( 'spaces after commas are not allowed', hasSpace.index )","\t}","","\treturn !!( noSpace && !hasSpace )","}","","module.exports = commaSpace",""],"l":{"4":1,"5":1,"6":1,"14":1,"19":0,"21":0,"26":0,"28":0,"29":0,"32":0,"33":0,"36":0,"37":0,"40":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/commentSpace.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/commentSpace.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":19},"end":{"line":12,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":12,"column":0},"end":{"line":35,"column":1}},"3":{"start":{"line":13,"column":1},"end":{"line":13,"column":41}},"4":{"start":{"line":13,"column":33},"end":{"line":13,"column":40}},"5":{"start":{"line":15,"column":1},"end":{"line":15,"column":30}},"6":{"start":{"line":16,"column":1},"end":{"line":16,"column":33}},"7":{"start":{"line":17,"column":1},"end":{"line":17,"column":40}},"8":{"start":{"line":21,"column":1},"end":{"line":23,"column":2}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"10":{"start":{"line":25,"column":1},"end":{"line":25,"column":43}},"11":{"start":{"line":27,"column":1},"end":{"line":32,"column":2}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":61}},"13":{"start":{"line":30,"column":6},"end":{"line":32,"column":2}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":60}},"15":{"start":{"line":34,"column":1},"end":{"line":34,"column":25}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":29}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},{"start":{"line":27,"column":1},"end":{"line":27,"column":1}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":34}},{"start":{"line":27,"column":38},"end":{"line":27,"column":65}},{"start":{"line":27,"column":69},"end":{"line":27,"column":82}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"6":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":11},"end":{"line":30,"column":38}},{"start":{"line":30,"column":42},"end":{"line":30,"column":68}}]}},"code":["'use strict'","","var commentRe = /\\/\\/ /","","","/**"," * @description // check for space after line comment"," * @param  {string} [line] curr line being linted"," * @param {string} [origLine] curr line before being stripped"," * @returns {boolean} true if comment found, false if not"," */","var commentSpace = function( line, origLine ) {","\tif ( !this.state.hasComment ) { return }","","\tvar spaceAfterComment = false","\tvar comment = this.cache.comment","\tvar index = origLine.indexOf( comment )","","\t// check for space after comment on it's own line,","\t// if no space, return warning","\tif ( commentRe.test( comment ) ) {","\t\tspaceAfterComment = true","\t}","","\tvar emptyComment = /\\/\\/$/.test( comment )","","\tif ( this.state.conf === 'always' && spaceAfterComment === false && !emptyComment ) {","\t\tthis.msg( 'line comments require a space after //', index )","\t}","\telse if ( this.state.conf === 'never' && spaceAfterComment === true ) {","\t\tthis.msg( 'spaces after line comments disallowed', index )","\t}","","\treturn spaceAfterComment","}","","module.exports = commentSpace",""],"l":{"3":1,"12":1,"13":0,"15":0,"16":0,"17":0,"21":0,"22":0,"25":0,"27":0,"28":0,"30":0,"31":0,"34":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/cssLiteral.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/cssLiteral.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":34}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":24,"column":1}},"2":{"start":{"line":11,"column":1},"end":{"line":11,"column":39}},"3":{"start":{"line":11,"column":31},"end":{"line":11,"column":38}},"4":{"start":{"line":12,"column":1},"end":{"line":12,"column":25}},"5":{"start":{"line":13,"column":1},"end":{"line":13,"column":35}},"6":{"start":{"line":15,"column":1},"end":{"line":17,"column":2}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}},"8":{"start":{"line":19,"column":1},"end":{"line":21,"column":2}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":50}},"10":{"start":{"line":23,"column":1},"end":{"line":23,"column":20}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":27}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},{"start":{"line":11,"column":1},"end":{"line":11,"column":1}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},{"start":{"line":15,"column":1},"end":{"line":15,"column":1}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":33}},{"start":{"line":19,"column":37},"end":{"line":19,"column":58}}]}},"code":["'use strict'","","","/**"," * @description if we disallowed css literals, check for them and return true if found"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if @css found, false if not"," * @TODO do i still work with setState?"," */","var cssLiteral = function( line ) {","\tif ( this.state.hashOrCSS ) { return }","\tvar isCSSLiteral = false","\tvar index = line.indexOf( '@css' )","","\tif ( index !== -1 ) {","\t\tisCSSLiteral = true","\t}","","\tif ( this.state.conf === 'never' && isCSSLiteral === true ) {","\t\tthis.msg( 'css literals are disallowed', index )","\t}","","\treturn isCSSLiteral","}","","module.exports = cssLiteral",""],"l":{"10":1,"11":0,"12":0,"13":0,"15":0,"16":0,"19":0,"20":0,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/depthLimit.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/depthLimit.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":34}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":14,"column":0},"end":{"line":35,"column":1}},"3":{"start":{"line":15,"column":1},"end":{"line":15,"column":33}},"4":{"start":{"line":16,"column":1},"end":{"line":16,"column":23}},"5":{"start":{"line":17,"column":1},"end":{"line":17,"column":64}},"6":{"start":{"line":22,"column":1},"end":{"line":24,"column":2}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":14}},"8":{"start":{"line":26,"column":1},"end":{"line":28,"column":2}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}},"10":{"start":{"line":30,"column":1},"end":{"line":32,"column":2}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":52}},"12":{"start":{"line":34,"column":1},"end":{"line":34,"column":18}},"13":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":38},"end":{"line":17,"column":60}},{"start":{"line":17,"column":63},"end":{"line":17,"column":64}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},{"start":{"line":22,"column":1},"end":{"line":22,"column":1}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},{"start":{"line":26,"column":1},"end":{"line":26,"column":1}}]},"4":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},{"start":{"line":30,"column":1},"end":{"line":30,"column":1}}]}},"code":["'use strict'","","// check if using selector before we count depth","// definitely not the best way to do this,","var ampRe = /^(&|\\/{1}|\\.\\.\\/|~\\/)/","","","/**"," * @description check nesting depth"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if nesting is too deep, false if not"," * @todo this is kinda not 100% reliable in it's current form, also could be refactors"," */","var depthLimit = function( line ) {","\tvar context = this.state.context","\tvar badNesting = false","\tvar limit = this.config.depthLimit ? this.config.depthLimit : 5","","\t// trim string and check if line starts with &","\t// reduce context in that case","\t// @TODO not really ideal","\tif ( ampRe.test( line.trim() ) ) {","\t\tcontext -= 1","\t}","","\tif ( context > limit ) {","\t\tbadNesting = true","\t}","","\tif ( badNesting === true ) {","\t\tthis.msg( 'selector depth greater than ' + limit )","\t}","","\treturn badNesting","}","","module.exports = depthLimit",""],"l":{"5":1,"14":1,"15":0,"16":0,"17":0,"22":0,"23":0,"26":0,"27":0,"30":0,"31":0,"34":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/duplicates.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/duplicates.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":34}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":44},"end":{"line":34,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":106}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":17}},"3":{"start":{"line":12,"column":0},"end":{"line":79,"column":1}},"4":{"start":{"line":13,"column":1},"end":{"line":13,"column":61}},"5":{"start":{"line":14,"column":1},"end":{"line":14,"column":17}},"6":{"start":{"line":15,"column":1},"end":{"line":15,"column":14}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":13}},"8":{"start":{"line":19,"column":1},"end":{"line":23,"column":2}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":24}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":28}},"11":{"start":{"line":26,"column":1},"end":{"line":28,"column":2}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":46}},"13":{"start":{"line":33,"column":1},"end":{"line":39,"column":2}},"14":{"start":{"line":34,"column":2},"end":{"line":38,"column":18}},"15":{"start":{"line":36,"column":3},"end":{"line":36,"column":32}},"16":{"start":{"line":36,"column":24},"end":{"line":36,"column":31}},"17":{"start":{"line":37,"column":3},"end":{"line":37,"column":30}},"18":{"start":{"line":45,"column":1},"end":{"line":59,"column":2}},"19":{"start":{"line":50,"column":2},"end":{"line":50,"column":69}},"20":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"21":{"start":{"line":54,"column":3},"end":{"line":54,"column":14}},"22":{"start":{"line":58,"column":2},"end":{"line":58,"column":71}},"23":{"start":{"line":61,"column":1},"end":{"line":76,"column":2}},"24":{"start":{"line":63,"column":2},"end":{"line":63,"column":65}},"25":{"start":{"line":66,"column":2},"end":{"line":75,"column":3}},"26":{"start":{"line":67,"column":3},"end":{"line":69,"column":4}},"27":{"start":{"line":72,"column":3},"end":{"line":74,"column":4}},"28":{"start":{"line":78,"column":1},"end":{"line":78,"column":12}},"29":{"start":{"line":81,"column":0},"end":{"line":81,"column":27}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":29}},{"start":{"line":20,"column":2},"end":{"line":20,"column":30}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},{"start":{"line":26,"column":1},"end":{"line":26,"column":1}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},{"start":{"line":33,"column":1},"end":{"line":33,"column":1}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":3},"end":{"line":36,"column":3}},{"start":{"line":36,"column":3},"end":{"line":36,"column":3}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},{"start":{"line":45,"column":1},"end":{"line":45,"column":1}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":32}},{"start":{"line":46,"column":2},"end":{"line":46,"column":43}},{"start":{"line":47,"column":2},"end":{"line":47,"column":24}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"9":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},{"start":{"line":61,"column":1},"end":{"line":61,"column":1}}]},"10":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]}},"code":["'use strict'","","var ignoreRe = /^{|[,}]|(:after|:active|:before|@import|@require|@extend|@media|:hover|@font-face|src)|,$/","var lastFile = ''","","","/**"," * @description check that selector properties are sorted alphabetically"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if dupe found, false if not"," */","var duplicates = function( line ) {","\tvar arr = this.splitAndStrip( new RegExp( /[\\s\\t]/ ), line )","\tvar dupe = false","\tvar dupeIndex","\tvar origFile","","\t// if root check not global, obliterate cache on each new file","\tif ( !this.config.globalDupe &&","\t\tlastFile !== this.cache.file ) {","\t\tthis.cache.sCache = {}","\t\tlastFile = this.cache.file","\t}","","\t// if cache for curr context doesn't exist yet (or was obliterated), make one","\tif ( typeof this.cache.sCache[ this.state.context ] === 'undefined' ) {","\t\tthis.cache.sCache[ this.state.context ] = []","\t}","","\t// if context changes, reset arrays except root","\t// basically, root can persist across files potentially","\t// caches above root only persist as long as they are within their context","\tif ( this.state.context !== this.state.prevContext ) {","\t\tObject.keys( this.cache.sCache ).forEach( function( val ) {","\t\t\t// string cause key","\t\t\tif ( val === '0' ) { return }","\t\t\tthis.cache.sCache[val] = []","\t\t}.bind( this ) )","\t}","","\t// if not in a list","\t// and not ignored syntax","\t// and property exists in the array already","\t// then dupe","\tif ( line.indexOf( ',' ) === -1 &&","\t\tthis.cache.prevLine.indexOf( ',' ) === -1 &&","\t\t!ignoreRe.test( line ) ) {","","\t\t// -1 if no dupe found","\t\tdupeIndex = this.cache.sCache[this.state.context].indexOf( arr[0] )","","\t\t// if match found at right context, is dupe","\t\tif ( dupeIndex !== -1 ) {","\t\t\tdupe = true","\t\t}","","\t\t// push selector (and file name) to cache","\t\tthis.cache.sCache[this.state.context].push( arr[0], this.cache.file )","\t}","","\tif ( dupe === true ) {","\t\t// location of original selector use if global dupe on","\t\torigFile = this.cache.sCache[this.state.context][dupeIndex + 1]","","\t\t// this.msg( 'duplicate property or selector, consider merging' )","\t\tif ( !this.config.globalDupe ) {","\t\t\tthis.msg(","\t\t\t\t'duplicate property or selector, consider merging'","\t\t\t)","\t\t}","\t\telse {","\t\t\tthis.msg(","\t\t\t\t'duplicate property or selector, consider merging\\nsee file: ' + origFile + ' for the original selector'","\t\t\t)","\t\t}","\t}","","\treturn dupe","}","","module.exports = duplicates",""],"l":{"3":1,"4":1,"12":1,"13":0,"14":0,"15":0,"16":0,"19":0,"21":0,"22":0,"26":0,"27":0,"33":0,"34":0,"36":0,"37":0,"45":0,"50":0,"53":0,"54":0,"58":0,"61":0,"63":0,"66":0,"67":0,"72":0,"78":0,"81":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/efficient.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/efficient.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":11,"column":0},"end":{"line":53,"column":1}},"3":{"start":{"line":13,"column":1},"end":{"line":13,"column":40}},"4":{"start":{"line":13,"column":32},"end":{"line":13,"column":39}},"5":{"start":{"line":15,"column":1},"end":{"line":15,"column":23}},"6":{"start":{"line":16,"column":1},"end":{"line":16,"column":61}},"7":{"start":{"line":20,"column":1},"end":{"line":41,"column":2}},"8":{"start":{"line":22,"column":2},"end":{"line":40,"column":3}},"9":{"start":{"line":24,"column":3},"end":{"line":26,"column":4}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"11":{"start":{"line":29,"column":7},"end":{"line":40,"column":3}},"12":{"start":{"line":31,"column":3},"end":{"line":31,"column":22}},"13":{"start":{"line":34,"column":7},"end":{"line":40,"column":3}},"14":{"start":{"line":36,"column":3},"end":{"line":39,"column":4}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"16":{"start":{"line":43,"column":1},"end":{"line":43,"column":35}},"17":{"start":{"line":45,"column":1},"end":{"line":50,"column":2}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":61}},"19":{"start":{"line":48,"column":6},"end":{"line":50,"column":2}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":68}},"21":{"start":{"line":52,"column":1},"end":{"line":52,"column":19}},"22":{"start":{"line":55,"column":0},"end":{"line":55,"column":26}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},{"start":{"line":20,"column":1},"end":{"line":20,"column":1}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":3}},{"start":{"line":24,"column":3},"end":{"line":24,"column":3}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":7},"end":{"line":29,"column":7}},{"start":{"line":29,"column":7},"end":{"line":29,"column":7}}]},"6":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":28}},{"start":{"line":29,"column":32},"end":{"line":29,"column":49}}]},"7":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":7},"end":{"line":34,"column":7}},{"start":{"line":34,"column":7},"end":{"line":34,"column":7}}]},"8":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":3},"end":{"line":36,"column":3}},{"start":{"line":36,"column":3},"end":{"line":36,"column":3}}]},"9":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":25}},{"start":{"line":36,"column":29},"end":{"line":36,"column":46}},{"start":{"line":37,"column":4},"end":{"line":37,"column":21}},{"start":{"line":37,"column":25},"end":{"line":37,"column":42}}]},"10":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},{"start":{"line":45,"column":1},"end":{"line":45,"column":1}}]},"11":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":33}},{"start":{"line":45,"column":37},"end":{"line":45,"column":57}}]},"12":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"13":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":11},"end":{"line":48,"column":39}},{"start":{"line":48,"column":43},"end":{"line":48,"column":64}}]}},"code":["'use strict'","","var valueRe = /(margin|padding)+[:| ]/","","","/**"," * @description check for 0 0 0 0 or 50px 0 50px 0 type mistakes"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if efficient, false if not"," */","var efficient = function( line ) {","\t// line doesnt have margin or padding then there's nothin to do here","\tif ( !valueRe.test( line ) ) { return }","","\tvar isEfficient = true","\tvar arr = this.splitAndStrip( new RegExp( /[\\s\\t]/ ), line )","","\t// if margin or padding we run the tests","\t// if line is potentially inefficient it needs to be at least this long","\tif ( arr.length > 2 ) {","\t\t// ex: margin 0 5px","\t\tif ( arr.length === 3 ) {","\t\t\t// ex margin 0 0","\t\t\tif ( arr[1] === arr[2] ) {","\t\t\t\tisEfficient = false","\t\t\t}","\t\t}","\t\t// ex margin 0 5px 10px","\t\telse if ( arr.length === 4 && arr[1] === arr[3] ) {","\t\t\t// ex margin 0 5px 0","\t\t\tisEfficient = false","\t\t}","\t\t// ex margin 0 50px 10px 7px","\t\telse if ( arr.length === 5 ) {","\t\t\t// ex margin 0 5px 0 5px or","\t\t\tif ( arr[1] === arr[3] && arr[2] === arr[4] ||","\t\t\t\tarr[1] !== arr[3] && arr[2] === arr[4] ) {","\t\t\t\tisEfficient = false","\t\t\t}","\t\t}","\t}","","\tvar index = line.indexOf( arr[1] )","","\tif ( this.state.conf === 'never' && isEfficient === true ) {","\t\tthis.msg( 'the value on this line is too succinct', index )","\t}","\telse if ( this.state.conf === 'always' && isEfficient === false ) {","\t\tthis.msg( 'the value on this line could be more succinct', index )","\t}","","\treturn isEfficient","}","","module.exports = efficient",""],"l":{"3":1,"11":1,"13":0,"15":0,"16":0,"20":0,"22":0,"24":0,"25":0,"29":0,"31":0,"34":0,"36":0,"38":0,"43":0,"45":0,"46":0,"48":0,"49":0,"52":0,"55":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/extendPref.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/extendPref.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":34}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":29,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":10,"column":51}},"3":{"start":{"line":10,"column":43},"end":{"line":10,"column":50}},"4":{"start":{"line":12,"column":1},"end":{"line":12,"column":28}},"5":{"start":{"line":16,"column":1},"end":{"line":22,"column":2}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":24}},"7":{"start":{"line":20,"column":6},"end":{"line":22,"column":2}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":24}},"9":{"start":{"line":24,"column":1},"end":{"line":26,"column":2}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":45}},"11":{"start":{"line":28,"column":1},"end":{"line":28,"column":23}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":27}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},{"start":{"line":16,"column":1},"end":{"line":16,"column":1}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":36}},{"start":{"line":16,"column":40},"end":{"line":16,"column":74}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"5":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":11},"end":{"line":20,"column":40}},{"start":{"line":20,"column":44},"end":{"line":20,"column":77}}]},"6":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]}},"code":["'use strict'","","","/**"," * @description check for specified extend preference"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if wrong style used, false if not"," */","var extendPref = function( line ) {","\tif ( line.indexOf( '@extend' ) === -1 ) { return }","","\tvar extendIncorrect = false","","\t// prefer @extends to @extend","\t// extremely petty, i know","\tif ( this.state.conf === '@extends' && line.indexOf( '@extends ' ) === -1 ) {","\t\textendIncorrect = true","\t}","\t// else @extend is your pref","\telse if ( this.state.conf === '@extend' && line.indexOf( '@extend ' ) === -1 ) {","\t\textendIncorrect = true","\t}","","\tif ( extendIncorrect === true ) {","\t\tthis.msg( 'please use ' + this.state.conf )","\t}","","\treturn extendIncorrect","}","","module.exports = extendPref",""],"l":{"9":1,"10":0,"12":0,"16":0,"17":0,"20":0,"21":0,"24":0,"25":0,"28":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/indentPref.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/indentPref.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":28}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":29,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":29}},"3":{"start":{"line":10,"column":1},"end":{"line":10,"column":33}},"4":{"start":{"line":12,"column":1},"end":{"line":12,"column":45}},"5":{"start":{"line":12,"column":37},"end":{"line":12,"column":44}},"6":{"start":{"line":14,"column":1},"end":{"line":14,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":18,"column":2}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":23}},"9":{"start":{"line":22,"column":1},"end":{"line":22,"column":29}},"10":{"start":{"line":24,"column":1},"end":{"line":26,"column":2}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":70}},"12":{"start":{"line":28,"column":1},"end":{"line":28,"column":21}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":27}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},{"start":{"line":12,"column":1},"end":{"line":12,"column":1}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},{"start":{"line":16,"column":1},"end":{"line":16,"column":1}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]}},"code":["'use strict'","","","/**"," * @description checks that the # of spaces used is consistent"," * @returns {boolean} true if # of spaces correct, false if not"," */","var indentPref = function() {","\tvar spaces = this.state.conf","\tvar context = this.state.context","","\tif ( typeof spaces !== 'number' ) { return }","","\tvar indentCorrect = true","","\tif ( context % 1 !== 0 ) {","\t\tindentCorrect = false","\t}","","\t// if spaces === 2 and context === 1.5 (meaning 1.5 levels... or 3 spaces)","\t// then the index for the warning msg is 2 * 1.5, or 3 spaces","\tvar index = spaces * context","","\tif ( indentCorrect === false ) {","\t\tthis.msg( 'incorrect # of spaces for indent, use ' + spaces, index )","\t}","","\treturn indentCorrect","}","","module.exports = indentPref",""],"l":{"8":1,"9":0,"10":0,"12":0,"14":0,"16":0,"17":0,"22":0,"24":0,"25":0,"28":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/leadingZero.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/leadingZero.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":18},"end":{"line":13,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":13,"column":0},"end":{"line":27,"column":1}},"5":{"start":{"line":14,"column":1},"end":{"line":14,"column":42}},"6":{"start":{"line":14,"column":34},"end":{"line":14,"column":41}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":44}},"8":{"start":{"line":17,"column":1},"end":{"line":17,"column":45}},"9":{"start":{"line":19,"column":1},"end":{"line":24,"column":2}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":84}},"11":{"start":{"line":22,"column":6},"end":{"line":24,"column":2}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":85}},"13":{"start":{"line":26,"column":1},"end":{"line":26,"column":21}},"14":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":34}},{"start":{"line":19,"column":38},"end":{"line":19,"column":53}}]},"4":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"5":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":11},"end":{"line":22,"column":38}},{"start":{"line":22,"column":42},"end":{"line":22,"column":55}}]}},"code":["'use strict'","","var decimalRe = /[^\\d+](0+\\.\\d+)|[\\s,\\(](\\.\\d+)/i","var leadZeroRe = /[^\\d+](0+\\.\\d+)/","var nonZeroRe = /[\\s,\\(](\\.\\d+)/","","","/**"," * @description check for leading 0 on numbers ( 0.5 )"," * @param {string} [line] curr line being linted"," * @returns {boolean|undefined} true if mixed, false if not"," */","var leadingZero = function( line ) {","\tif ( !decimalRe.test( line ) ) { return }","","\tvar leadZeroFound = leadZeroRe.exec( line )","\tvar leadZeroMissing = nonZeroRe.exec( line )","","\tif ( this.state.conf === 'always' && leadZeroMissing ) {","\t\tthis.msg( 'leading zeros for decimal points are required', leadZeroMissing.index )","\t}","\telse if ( this.state.conf === 'never' && leadZeroFound ) {","\t\tthis.msg( 'leading zeros for decimal points are unnecessary', leadZeroFound.index )","\t}","","\treturn leadZeroFound","}","","module.exports = leadingZero",""],"l":{"3":1,"4":1,"5":1,"13":1,"14":0,"16":0,"17":0,"19":0,"20":0,"22":0,"23":0,"26":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/mixed.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/mixed.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":39}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":15}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":17,"column":0},"end":{"line":46,"column":1}},"5":{"start":{"line":18,"column":1},"end":{"line":18,"column":52}},"6":{"start":{"line":19,"column":1},"end":{"line":19,"column":20}},"7":{"start":{"line":20,"column":1},"end":{"line":20,"column":73}},"8":{"start":{"line":21,"column":1},"end":{"line":21,"column":43}},"9":{"start":{"line":24,"column":1},"end":{"line":24,"column":37}},"10":{"start":{"line":25,"column":1},"end":{"line":25,"column":41}},"11":{"start":{"line":29,"column":1},"end":{"line":38,"column":2}},"12":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"13":{"start":{"line":31,"column":3},"end":{"line":31,"column":17}},"14":{"start":{"line":36,"column":6},"end":{"line":38,"column":2}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":16}},"16":{"start":{"line":40,"column":1},"end":{"line":43,"column":2}},"17":{"start":{"line":41,"column":2},"end":{"line":41,"column":53}},"18":{"start":{"line":42,"column":2},"end":{"line":42,"column":44}},"19":{"start":{"line":45,"column":1},"end":{"line":45,"column":15}},"20":{"start":{"line":48,"column":0},"end":{"line":48,"column":22}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":47}},{"start":{"line":20,"column":51},"end":{"line":20,"column":73}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},{"start":{"line":29,"column":1},"end":{"line":29,"column":1}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},{"start":{"line":40,"column":1},"end":{"line":40,"column":1}}]},"6":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":22},"end":{"line":41,"column":35}},{"start":{"line":41,"column":38},"end":{"line":41,"column":53}}]}},"code":["'use strict'","","// was a tab used, at all","var tabs = /\\t/","// check for 2 or more spaces (if hard tabs, shouldn't find anything)","var spaces = /( {2,})+/","// don't throw false positives if line ends in comment","var trimRightRe = /( |\\t)+(\\/\\/)+.+$/gm","","","/**"," * @description check for mixed spaces and tabs"," * @param {string} [line] curr line being linted"," * @param {string} [origLine] curr line before being stripped"," * @returns {boolean} true if mixed, false if not"," */","var mixed = function( line, origLine ) {","\tvar trimRight = origLine.replace( trimRightRe, '' )","\tvar isMixed = false","\tvar indentPref = this.config.indentPref.expect || this.config.indentPref","\tvar isNum = typeof indentPref === 'number'","","\t// regexp obj or null","\tvar hasTabs = tabs.exec( trimRight )","\tvar hasSpaces = spaces.exec( trimRight )","","\t// if this isnt set to false then we're indenting with spaces,","\t// so check against tabs","\tif ( isNum ) {","\t\tif ( hasTabs ) {","\t\t\tisMixed = true","\t\t}","\t}","\t// else you're a hard tab believer (go you)","\t// look for 2 or more spaces","\telse if ( hasSpaces ) {","\t\tisMixed = true","\t}","","\tif ( isMixed === true ) {","\t\tvar index = isNum ? hasTabs.index : hasSpaces.index","\t\tthis.msg( 'mixed spaces and tabs', index )","\t}","","\treturn isMixed","}","","module.exports = mixed",""],"l":{"4":1,"6":1,"8":1,"17":1,"18":0,"19":0,"20":0,"21":0,"24":0,"25":0,"29":0,"30":0,"31":0,"36":0,"37":0,"40":0,"41":0,"42":0,"45":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/namingConvention.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/namingConvention.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":23},"end":{"line":17,"column":40}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":127}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":81}},"4":{"start":{"line":17,"column":0},"end":{"line":87,"column":1}},"5":{"start":{"line":18,"column":1},"end":{"line":18,"column":42}},"6":{"start":{"line":20,"column":1},"end":{"line":20,"column":28}},"7":{"start":{"line":21,"column":1},"end":{"line":21,"column":26}},"8":{"start":{"line":24,"column":1},"end":{"line":26,"column":2}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":27}},"10":{"start":{"line":29,"column":1},"end":{"line":79,"column":2}},"11":{"start":{"line":31,"column":2},"end":{"line":78,"column":3}},"12":{"start":{"line":37,"column":3},"end":{"line":77,"column":4}},"13":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"14":{"start":{"line":42,"column":5},"end":{"line":42,"column":25}},"15":{"start":{"line":46,"column":8},"end":{"line":77,"column":4}},"16":{"start":{"line":48,"column":4},"end":{"line":52,"column":5}},"17":{"start":{"line":51,"column":5},"end":{"line":51,"column":25}},"18":{"start":{"line":55,"column":8},"end":{"line":77,"column":4}},"19":{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},"20":{"start":{"line":60,"column":5},"end":{"line":60,"column":25}},"21":{"start":{"line":64,"column":8},"end":{"line":77,"column":4}},"22":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"23":{"start":{"line":67,"column":5},"end":{"line":67,"column":25}},"24":{"start":{"line":71,"column":8},"end":{"line":77,"column":4}},"25":{"start":{"line":72,"column":4},"end":{"line":72,"column":57}},"26":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"27":{"start":{"line":75,"column":5},"end":{"line":75,"column":25}},"28":{"start":{"line":81,"column":1},"end":{"line":84,"column":2}},"29":{"start":{"line":82,"column":2},"end":{"line":82,"column":36}},"30":{"start":{"line":83,"column":2},"end":{"line":83,"column":72}},"31":{"start":{"line":86,"column":1},"end":{"line":86,"column":21}},"32":{"start":{"line":89,"column":0},"end":{"line":89,"column":33}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},{"start":{"line":29,"column":1},"end":{"line":29,"column":1}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":31}},{"start":{"line":29,"column":35},"end":{"line":29,"column":64}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":7},"end":{"line":31,"column":29}},{"start":{"line":32,"column":3},"end":{"line":32,"column":31}},{"start":{"line":33,"column":3},"end":{"line":33,"column":31}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":3},"end":{"line":37,"column":3}},{"start":{"line":37,"column":3},"end":{"line":37,"column":3}}]},"7":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"8":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":37}},{"start":{"line":40,"column":5},"end":{"line":40,"column":33}},{"start":{"line":41,"column":5},"end":{"line":41,"column":28}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"10":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"11":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":9},"end":{"line":48,"column":37}},{"start":{"line":49,"column":5},"end":{"line":49,"column":33}},{"start":{"line":50,"column":5},"end":{"line":50,"column":27}}]},"12":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"13":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"14":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":9},"end":{"line":57,"column":37}},{"start":{"line":58,"column":5},"end":{"line":58,"column":33}},{"start":{"line":59,"column":5},"end":{"line":59,"column":27}}]},"15":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"16":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"17":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":9},"end":{"line":66,"column":31}},{"start":{"line":66,"column":35},"end":{"line":66,"column":56}}]},"18":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"19":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"20":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},{"start":{"line":81,"column":1},"end":{"line":81,"column":1}}]}},"code":["'use strict'","","// the alphabet, uppers","var upperRe = /[A-Z]+/m","// BEM (http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/)","var bemRe = /^([$.#{:][${a-z]([-]?[${}a-z0-9]+)*(_{2}[${}a-z0-9]([-]?[${}a-z0-9]+)*)?((_[${}a-z0-9]([-]?[a-z0-9}]+)*){2})*)\\b/m","// camelCase or CamelCase","var camelRe = /^[$#.{:]+([a-zA-Z]|[${}])+([a-z]|[${}])+(([.A-Z0-9])+[a-z ]+)+\\b/m","","","/**"," * @description check for names-like-this vs namesLikeThis"," * or NamesLikeThis vs names_like_this or names-like__this-that"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if convention wrong, false if not"," */","var namingConvention = function( line ) {","\tvar arr = this.splitAndStrip( ' ', line )","\t// determine if line should be tested at all","\tvar doWeTestRe = /^[${:]+/m","\tvar badConvention = false","","\t// test a wider range if strict is true","\tif ( this.config.namingConventionStrict === true ) {","\t\tdoWeTestRe = /^[$#.{:]+/m","\t}","","\t// only run checks if on a class, id, or variable","\tif ( doWeTestRe.test( arr[0] ) && arr[0].indexOf( '::' ) === -1 ) {","\t\t// if all lowercase we do nothing, if -, _ or uppercase found we check convention","\t\tif ( upperRe.test( arr[0] ) ||","\t\t\tarr[0].indexOf( '-' ) !== -1 ||","\t\t\tarr[0].indexOf( '_' ) !== -1 ) {","","\t\t\t// check conventions","\t\t\t// $varName","\t\t\tif ( this.state.conf === 'camelCase' ) {","\t\t\t\t// if no A-Z present, or - present, or _ present","\t\t\t\tif ( arr[0].indexOf( '-' ) !== -1 ||","\t\t\t\t\tarr[0].indexOf( '_' ) !== -1 ||","\t\t\t\t\t!camelRe.test( arr[0] ) ) {","\t\t\t\t\tbadConvention = true","\t\t\t\t}","\t\t\t}","\t\t\t// $var_name","\t\t\telse if ( this.state.conf === 'lowercase_underscore' ) {","\t\t\t\t// if no _ present, or - present, or A-Z present","\t\t\t\tif ( arr[0].indexOf( '-' ) !== -1 ||","\t\t\t\t\tarr[0].indexOf( '_' ) === -1 ||","\t\t\t\t\tupperRe.test( arr[0] ) ) {","\t\t\t\t\tbadConvention = true","\t\t\t\t}","\t\t\t}","\t\t\t// $var-name","\t\t\telse if ( this.state.conf === 'lowercase-dash' ) {","\t\t\t\t// if no - present, or _ present, or A-Z present","\t\t\t\tif ( arr[0].indexOf( '-' ) === -1 ||","\t\t\t\t\tarr[0].indexOf( '_' ) !== -1 ||","\t\t\t\t\tupperRe.test( arr[0] ) ) {","\t\t\t\t\tbadConvention = true","\t\t\t\t}","\t\t\t}","\t\t\t// $var__element","\t\t\telse if ( this.state.conf === 'BEM' ) {","\t\t\t\t// if A-Z or not following BEM specification","\t\t\t\tif ( upperRe.test( arr[0] ) || !bemRe.test( arr[0] ) ) {","\t\t\t\t\tbadConvention = true","\t\t\t\t}","\t\t\t}","\t\t\t// if not one of the defaults, assume custom regExp","\t\t\telse if ( typeof this.state.conf === 'string' ) {","\t\t\t\tvar conventionRe = new RegExp( this.state.conf, 'm' )","","\t\t\t\tif ( !conventionRe.test( arr[0] ) ) {","\t\t\t\t\tbadConvention = true","\t\t\t\t}","\t\t\t}","\t\t}","\t}","","\tif ( badConvention === true ) {","\t\tvar index = line.indexOf( arr[0] )","\t\tthis.msg( 'preferred naming convention is ' + this.state.conf, index )","\t}","","\treturn badConvention","}","","module.exports = namingConvention",""],"l":{"4":1,"6":1,"8":1,"17":1,"18":0,"20":0,"21":0,"24":0,"25":0,"29":0,"31":0,"37":0,"39":0,"42":0,"46":0,"48":0,"51":0,"55":0,"57":0,"60":0,"64":0,"66":0,"67":0,"71":0,"72":0,"74":0,"75":0,"81":0,"82":0,"83":0,"86":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/noImportant.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/noImportant.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":18},"end":{"line":9,"column":35}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":23,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":10,"column":22}},"3":{"start":{"line":11,"column":1},"end":{"line":11,"column":41}},"4":{"start":{"line":14,"column":1},"end":{"line":16,"column":2}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":18}},"6":{"start":{"line":18,"column":1},"end":{"line":20,"column":2}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":47}},"8":{"start":{"line":22,"column":1},"end":{"line":22,"column":17}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},{"start":{"line":18,"column":1},"end":{"line":18,"column":1}}]}},"code":["'use strict'","","","/**"," * @description disallows use of !important"," * @param {string} [line] curr line being linted"," * @return {boolean} true if !important used, false if not"," */","var noImportant = function( line ) {","\tvar important = false","\tvar index = line.indexOf( '!important' )","","\t// return true if border|outline is followed by a 0","\tif ( index !== -1 ) {","\t\timportant = true","\t}","","\tif ( important === true ) {","\t\tthis.msg( '!important is disallowed', index )","\t}","","\treturn important","}","","module.exports = noImportant",""],"l":{"9":1,"10":0,"11":0,"14":0,"15":0,"18":0,"19":0,"22":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/none.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/none.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"3":{"start":{"line":12,"column":0},"end":{"line":40,"column":1}},"4":{"start":{"line":13,"column":1},"end":{"line":16,"column":2}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":8}},"6":{"start":{"line":20,"column":1},"end":{"line":20,"column":22}},"7":{"start":{"line":24,"column":1},"end":{"line":37,"column":2}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":61}},"10":{"start":{"line":32,"column":6},"end":{"line":37,"column":2}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":18}},"12":{"start":{"line":36,"column":2},"end":{"line":36,"column":64}},"13":{"start":{"line":39,"column":1},"end":{"line":39,"column":17}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":21}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":37}},{"start":{"line":14,"column":2},"end":{"line":14,"column":34}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":34}},{"start":{"line":25,"column":3},"end":{"line":25,"column":22}},{"start":{"line":26,"column":3},"end":{"line":26,"column":23}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"6":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":11},"end":{"line":32,"column":38}},{"start":{"line":33,"column":2},"end":{"line":33,"column":21}},{"start":{"line":34,"column":2},"end":{"line":34,"column":22}}]}},"code":["'use strict'","","var zeroRe = /((border)|(outline))+(:|\\s)+0(?!-)/","var noneRe = /((border)|(outline))+(:|\\s)+(none)+(?!-)/","","","/**"," * @description checks for border none or outline none"," * @param {string} [line] curr line being linted"," * @return {boolean} true if none used, false if not"," */","var none = function( line ) {","\tif ( line.indexOf( 'border' ) === -1 &&","\t\tline.indexOf( 'outline' ) === -1 ) {","\t\treturn","\t}","","\t// false if nothing wrong with line","\t// true if problem found with line, regardless of config","\tvar badSyntax = false","","\t// return true if border|outline is followed by a 0","\t// enforce use of none","\tif ( this.state.conf === 'always' &&","\t\t\tzeroRe.test( line ) &&","\t\t\t!noneRe.test( line ) ) {","\t\tbadSyntax = true","\t\tthis.msg( 'none is preferred over 0', line.indexOf( '0' ) )","\t}","\t// return true if border|outline is followed by none","\t// enforce use of 0","\telse if ( this.state.conf === 'never' &&","\t\tnoneRe.test( line ) &&","\t\t!zeroRe.test( line ) ) {","\t\tbadSyntax = true","\t\tthis.msg( '0 is preferred over none', line.indexOf( 'none' ) )","\t}","","\treturn badSyntax","}","","module.exports = none",""],"l":{"3":1,"4":1,"12":1,"13":0,"15":0,"20":0,"24":0,"27":0,"28":0,"32":0,"35":0,"36":0,"39":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/parenSpace.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/parenSpace.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":16,"column":0},"end":{"line":47,"column":1}},"7":{"start":{"line":17,"column":1},"end":{"line":17,"column":45}},"8":{"start":{"line":17,"column":37},"end":{"line":17,"column":44}},"9":{"start":{"line":19,"column":1},"end":{"line":19,"column":60}},"10":{"start":{"line":20,"column":1},"end":{"line":20,"column":56}},"11":{"start":{"line":21,"column":1},"end":{"line":21,"column":10}},"12":{"start":{"line":22,"column":1},"end":{"line":22,"column":22}},"13":{"start":{"line":23,"column":1},"end":{"line":23,"column":20}},"14":{"start":{"line":25,"column":1},"end":{"line":44,"column":2}},"15":{"start":{"line":26,"column":2},"end":{"line":26,"column":63}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":59}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":54}},"18":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"19":{"start":{"line":31,"column":3},"end":{"line":31,"column":32}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":76}},"21":{"start":{"line":36,"column":6},"end":{"line":44,"column":2}},"22":{"start":{"line":37,"column":2},"end":{"line":37,"column":46}},"23":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"24":{"start":{"line":40,"column":3},"end":{"line":40,"column":28}},"25":{"start":{"line":43,"column":2},"end":{"line":43,"column":76}},"26":{"start":{"line":46,"column":1},"end":{"line":46,"column":36}},"27":{"start":{"line":49,"column":0},"end":{"line":49,"column":27}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},{"start":{"line":25,"column":1},"end":{"line":25,"column":1}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":34}},{"start":{"line":25,"column":40},"end":{"line":25,"column":54}},{"start":{"line":25,"column":58},"end":{"line":25,"column":70}}]},"4":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":10},"end":{"line":28,"column":27}},{"start":{"line":28,"column":31},"end":{"line":28,"column":54}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"6":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":7},"end":{"line":30,"column":13}},{"start":{"line":30,"column":17},"end":{"line":30,"column":32}}]},"7":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"8":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":38}},{"start":{"line":36,"column":44},"end":{"line":36,"column":57}},{"start":{"line":36,"column":61},"end":{"line":36,"column":72}}]},"9":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":10},"end":{"line":37,"column":23}},{"start":{"line":37,"column":27},"end":{"line":37,"column":46}}]},"10":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"11":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":7},"end":{"line":39,"column":13}},{"start":{"line":39,"column":17},"end":{"line":39,"column":28}}]},"12":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":21}},{"start":{"line":46,"column":25},"end":{"line":46,"column":36}}]}},"code":["'use strict'","","var parensRe = /\\(.+\\)/","var parensBeginWithSpaceRe = /\\(\\s+/","var parensEndWithSpaceRe = /\\s+\\)+/","var parensBeginWithNoSpaceRe = /\\(\\S+/","var parensEndWithNoSpaceRe = /\\S+\\)+/","","","/**"," * @description checks for extra space when using parens"," * @param {string} [line] curr line being linted"," * @param {string} [origLine] curr line before being stripped"," * @return {boolean} true if placeholder used, false if not"," */","var parenSpace = function( line, origLine ) {","\tif ( !parensRe.test( origLine ) ) { return }","","\tvar hasStartSpace = parensBeginWithSpaceRe.exec( origLine )","\tvar hasEndSpace = parensEndWithSpaceRe.exec( origLine )","\tvar index","\tvar missingStartSpace","\tvar missingEndSpace","","\tif ( this.state.conf === 'always' && ( !hasStartSpace || !hasEndSpace ) ) {","\t\tmissingStartSpace = parensBeginWithNoSpaceRe.exec( origLine )","\t\tmissingEndSpace = parensEndWithNoSpaceRe.exec( origLine )","\t\tindex = missingStartSpace && missingStartSpace.index","","\t\tif ( !index && missingEndSpace ) {","\t\t\tindex = missingEndSpace.index","\t\t}","","\t\tthis.msg( '( param1, param2 ) is preferred over (param1, param2)', index )","\t}","\telse if ( this.state.conf === 'never' && ( hasStartSpace || hasEndSpace ) ) {","\t\tindex = hasStartSpace && hasStartSpace.index","","\t\tif ( !index && hasEndSpace ) {","\t\t\tindex = hasEndSpace.index","\t\t}","","\t\tthis.msg( '(param1, param2) is preferred over ( param1, param2 )', index )","\t}","","\treturn hasStartSpace && hasEndSpace","}","","module.exports = parenSpace",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"16":1,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"34":0,"36":0,"37":0,"39":0,"40":0,"43":0,"46":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/placeholders.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/placeholders.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":19},"end":{"line":11,"column":36}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":32},"end":{"line":23,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":11,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":12,"column":1},"end":{"line":12,"column":51}},"4":{"start":{"line":12,"column":43},"end":{"line":12,"column":50}},"5":{"start":{"line":14,"column":1},"end":{"line":14,"column":24}},"6":{"start":{"line":20,"column":1},"end":{"line":20,"column":58}},"7":{"start":{"line":23,"column":1},"end":{"line":26,"column":4}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":39}},"10":{"start":{"line":28,"column":1},"end":{"line":33,"column":2}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":64}},"12":{"start":{"line":31,"column":6},"end":{"line":33,"column":2}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":52}},"14":{"start":{"line":35,"column":1},"end":{"line":35,"column":19}},"15":{"start":{"line":38,"column":0},"end":{"line":38,"column":29}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},{"start":{"line":12,"column":1},"end":{"line":12,"column":1}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},{"start":{"line":28,"column":1},"end":{"line":28,"column":1}}]},"3":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":34}},{"start":{"line":28,"column":38},"end":{"line":28,"column":59}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":11},"end":{"line":31,"column":38}},{"start":{"line":31,"column":42},"end":{"line":31,"column":62}}]}},"code":["'use strict'","","var extendRe = /(@extend)+s?\\s/","","","/**"," * @description check that @extend is only used with a $placeholderVar"," * @param {string} [line] curr line being linted"," * @return {boolean} true if placeholder used, false if not"," */","var placeholders = function( line ) {","\tif ( line.indexOf( '@extend' ) === -1 ) { return }","","\tvar placeholder = false","","\t// stylus supports multiple, mixed extends and optional extends","\t// so lets pull them out of the line and check individually","\t// @extends .biz !optional, $extendable !optional =>","\t// ['.biz !optional', '$extendable !optional']","\tvar extendArr = line.replace( extendRe, '' ).split( ',' )","","\t// if any item in the list is not a placeholder, fail","\tplaceholder = extendArr.every( function( line ) {","\t\tvar trimmed = line.trim()","\t\treturn trimmed.substr( 0, 1 ) === '$'","\t} )","","\tif ( this.state.conf === 'always' && placeholder === false ) {","\t\tthis.msg( 'always use a placeholder variable when extending' )","\t}","\telse if ( this.state.conf === 'never' && placeholder === true ) {","\t\tthis.msg( 'placeholder variables are disallowed' )","\t}","","\treturn placeholder","}","","module.exports = placeholders",""],"l":{"3":1,"11":1,"12":0,"14":0,"20":0,"23":0,"24":0,"25":0,"28":0,"29":0,"31":0,"32":0,"35":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/prefixVarsWithDollar.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/prefixVarsWithDollar.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":107}},"4":{"start":{"line":13,"column":0},"end":{"line":43,"column":1}},"5":{"start":{"line":14,"column":1},"end":{"line":14,"column":64}},"6":{"start":{"line":14,"column":56},"end":{"line":14,"column":63}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":20}},"8":{"start":{"line":20,"column":1},"end":{"line":33,"column":2}},"9":{"start":{"line":21,"column":2},"end":{"line":28,"column":3}},"10":{"start":{"line":25,"column":3},"end":{"line":27,"column":4}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":20}},"12":{"start":{"line":31,"column":6},"end":{"line":33,"column":2}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"14":{"start":{"line":35,"column":1},"end":{"line":40,"column":2}},"15":{"start":{"line":36,"column":2},"end":{"line":36,"column":76}},"16":{"start":{"line":38,"column":6},"end":{"line":40,"column":2}},"17":{"start":{"line":39,"column":2},"end":{"line":39,"column":68}},"18":{"start":{"line":42,"column":1},"end":{"line":42,"column":16}},"19":{"start":{"line":45,"column":0},"end":{"line":45,"column":37}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":26}},{"start":{"line":14,"column":30},"end":{"line":14,"column":51}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},{"start":{"line":20,"column":1},"end":{"line":20,"column":1}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"5":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":7},"end":{"line":21,"column":33}},{"start":{"line":22,"column":3},"end":{"line":22,"column":34}},{"start":{"line":23,"column":3},"end":{"line":23,"column":24}}]},"6":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":3},"end":{"line":25,"column":3}},{"start":{"line":25,"column":3},"end":{"line":25,"column":3}}]},"7":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"8":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":11},"end":{"line":31,"column":38}},{"start":{"line":31,"column":42},"end":{"line":31,"column":63}}]},"9":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},{"start":{"line":35,"column":1},"end":{"line":35,"column":1}}]},"10":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":34}},{"start":{"line":35,"column":38},"end":{"line":35,"column":56}}]},"11":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]},"12":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":11},"end":{"line":38,"column":38}},{"start":{"line":38,"column":42},"end":{"line":38,"column":59}}]}},"code":["'use strict'","","var dollaRe = /\\$[\\-_]*\\w/","var eqEndRe = /=$|=\\s$/","var ignoreRe = /(\\[.+\\])|if|for|else|return|@require|@import|@media|@block|vendor-prefixes|calc|(=|= )$|{$/ // 3","","","/**"," * @description check that $ is used when declaring vars"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if in order, false if not"," */","var prefixVarsWithDollar = function( line ) {","\tif ( this.state.hashOrCSS || ignoreRe.test( line ) ) { return }","","\tvar hasDolla = true","","\t// if line has a mixin, we need check each param for missing $","\t// else we just check if = is present && $ is prefixing something","\tif ( this.state.conf === 'always' ) {","\t\tif ( line.indexOf( '=' ) !== -1 &&","\t\t\tline.indexOf( '@block' ) === -1 &&","\t\t\t!eqEndRe.test( line ) ) {","","\t\t\tif ( !dollaRe.test( line ) ) {","\t\t\t\thasDolla = false","\t\t\t}","\t\t}","\t}","\t// the never check is easier, since any $ means it fails","\telse if ( this.state.conf === 'never' && !dollaRe.test( line ) ) {","\t\thasDolla = false","\t}","","\tif ( this.state.conf === 'always' && hasDolla === false ) {","\t\tthis.msg( 'variables and parameters must be prefixed with the $ sign', 0 )","\t}","\telse if ( this.state.conf === 'never' && hasDolla === true ) {","\t\tthis.msg( '$ sign is disallowed for variables and parameters', 0 )","\t}","","\treturn hasDolla","}","","module.exports = prefixVarsWithDollar",""],"l":{"3":1,"4":1,"5":1,"13":1,"14":0,"16":0,"20":0,"21":0,"25":0,"26":0,"31":0,"32":0,"35":0,"36":0,"38":0,"39":0,"42":0,"45":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/quotePref.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/quotePref.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":89}},"2":{"start":{"line":12,"column":0},"end":{"line":53,"column":1}},"3":{"start":{"line":13,"column":1},"end":{"line":16,"column":2}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":8}},"5":{"start":{"line":18,"column":1},"end":{"line":18,"column":23}},"6":{"start":{"line":20,"column":1},"end":{"line":20,"column":22}},"7":{"start":{"line":21,"column":1},"end":{"line":21,"column":25}},"8":{"start":{"line":22,"column":1},"end":{"line":22,"column":10}},"9":{"start":{"line":25,"column":1},"end":{"line":50,"column":2}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":39}},"11":{"start":{"line":31,"column":2},"end":{"line":49,"column":3}},"12":{"start":{"line":33,"column":3},"end":{"line":33,"column":48}},"13":{"start":{"line":35,"column":3},"end":{"line":38,"column":4}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":20}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":98}},"16":{"start":{"line":41,"column":7},"end":{"line":49,"column":3}},"17":{"start":{"line":43,"column":3},"end":{"line":43,"column":48}},"18":{"start":{"line":45,"column":3},"end":{"line":48,"column":4}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":20}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":98}},"21":{"start":{"line":52,"column":1},"end":{"line":52,"column":17}},"22":{"start":{"line":55,"column":0},"end":{"line":55,"column":26}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":36}},{"start":{"line":14,"column":3},"end":{"line":14,"column":33}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"4":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":7},"end":{"line":31,"column":35}},{"start":{"line":31,"column":39},"end":{"line":31,"column":68}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":3},"end":{"line":35,"column":3}},{"start":{"line":35,"column":3},"end":{"line":35,"column":3}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":7},"end":{"line":41,"column":7}},{"start":{"line":41,"column":7},"end":{"line":41,"column":7}}]},"7":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":40}},{"start":{"line":41,"column":44},"end":{"line":41,"column":73}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":3},"end":{"line":45,"column":3}},{"start":{"line":45,"column":3},"end":{"line":45,"column":3}}]}},"code":["'use strict'","","var stringRe = /(?=[\"'])(?:\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\s\\S][^'\\\\]*)*')/g","","","/**"," * @description check that quote style is consistent with config"," * @param  {string} [line] curr line being linted"," * @param {string} [origLine] curr line before being stripped"," * @return {boolean} true if in order, false if not"," */","var quotePref = function( line, origLine ) {","\tif ( origLine.indexOf( '\"' ) === -1 &&","\t\t\torigLine.indexOf( \"'\" ) === -1 ) {","\t\treturn","\t}","","\tstringRe.lastIndex = 0","","\tvar badQuotes = false","\tvar hasInnerQuote = true","\tvar match","","\t// for each quote match, check err","\twhile ( ( match = stringRe.exec( origLine ) ) !== null ) {","\t\t// just checks the first inner quote, most common case","\t\t// almost certainly not the best way to do this","\t\tvar content = match[0].slice( 1, -1 )","","\t\t// if '' quotes preferred and match starts with double \"\" quote","\t\tif ( this.state.conf === 'single' && match[0].indexOf( '\"' ) === 0 ) {","\t\t\t// \"\" is allowed when it's cases like \"Someone's string here\"","\t\t\thasInnerQuote = content.indexOf( \"'\" ) !== -1","","\t\t\tif ( !hasInnerQuote ) {","\t\t\t\tbadQuotes = true","\t\t\t\tthis.msg( 'preferred quote style is ' + this.state.conf + ' quotes', match[0].indexOf( '\"' ) )","\t\t\t}","\t\t}","\t\t// if \"\" quotes preferred and match start with single '' quote","\t\telse if ( this.state.conf === 'double' && match[0].indexOf( \"'\" ) === 0 ) {","\t\t\t// \"\" is allowed when it's cases like \"Someone's string here\"","\t\t\thasInnerQuote = content.indexOf( '\"' ) !== -1","","\t\t\tif ( !hasInnerQuote ) {","\t\t\t\tbadQuotes = true","\t\t\t\tthis.msg( 'preferred quote style is ' + this.state.conf + ' quotes', match[0].indexOf( \"'\" ) )","\t\t\t}","\t\t}","\t}","","\treturn badQuotes","}","","module.exports = quotePref",""],"l":{"3":1,"12":1,"13":0,"15":0,"18":0,"20":0,"21":0,"22":0,"25":0,"28":0,"31":0,"33":0,"35":0,"36":0,"37":0,"41":0,"43":0,"45":0,"46":0,"47":0,"52":0,"55":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/semicolons.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/semicolons.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":81}},"2":{"start":{"line":12,"column":0},"end":{"line":42,"column":1}},"3":{"start":{"line":13,"column":1},"end":{"line":13,"column":43}},"4":{"start":{"line":13,"column":37},"end":{"line":13,"column":43}},"5":{"start":{"line":14,"column":1},"end":{"line":14,"column":35}},"6":{"start":{"line":14,"column":29},"end":{"line":14,"column":35}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":14}},"8":{"start":{"line":17,"column":1},"end":{"line":17,"column":32}},"9":{"start":{"line":19,"column":1},"end":{"line":21,"column":2}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}},"11":{"start":{"line":26,"column":1},"end":{"line":32,"column":2}},"12":{"start":{"line":27,"column":2},"end":{"line":31,"column":3}},"13":{"start":{"line":30,"column":3},"end":{"line":30,"column":20}},"14":{"start":{"line":34,"column":1},"end":{"line":39,"column":2}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":50}},"16":{"start":{"line":37,"column":6},"end":{"line":39,"column":2}},"17":{"start":{"line":38,"column":2},"end":{"line":38,"column":46}},"18":{"start":{"line":41,"column":1},"end":{"line":41,"column":17}},"19":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":33}},{"start":{"line":19,"column":37},"end":{"line":19,"column":49}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},{"start":{"line":26,"column":1},"end":{"line":26,"column":1}}]},"6":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":34}},{"start":{"line":26,"column":38},"end":{"line":26,"column":67}}]},"7":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"8":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":7},"end":{"line":27,"column":19}},{"start":{"line":28,"column":3},"end":{"line":28,"column":29}},{"start":{"line":29,"column":3},"end":{"line":29,"column":29}}]},"9":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},{"start":{"line":34,"column":1},"end":{"line":34,"column":1}}]},"10":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":33}},{"start":{"line":34,"column":37},"end":{"line":34,"column":55}}]},"11":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"12":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":11},"end":{"line":37,"column":39}},{"start":{"line":37,"column":43},"end":{"line":37,"column":62}}]}},"code":["'use strict'","","// we only want to check semicolons on properties/values","var ignoreRe = /(^[*#.])|[&>/]|{|}|if|for(?!\\w)|else|@block|@media|(}|{|=|,)$/igm","","","/**"," * @description check that selector properties are sorted accordingly"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if in order, false if not"," */","var semicolons = function( line ) {","\tif ( ignoreRe.test( line.trim() ) ) return","\tif ( this.state.hashOrCss ) return","","\tvar semicolon","\tvar index = line.indexOf( ';' )","","\tif ( this.state.conf === 'never' && index !== -1 ) {","\t\tsemicolon = true","\t}","","\t// for reasons that perplex me, even when the first use","\t// of this at the top returns true, sometimes the method","\t// still runs, so we add this second ignoreCheck here to catch it","\tif ( this.state.conf === 'always' && !ignoreRe.test( line.trim() ) ) {","\t\tif ( index === -1 &&","\t\t\tline.indexOf( '}' ) === -1 &&","\t\t\tline.indexOf( '{' ) === -1 ) {","\t\t\tsemicolon = false","\t\t}","\t}","","\tif ( this.state.conf === 'never' && semicolon === true ) {","\t\tthis.msg( 'unnecessary semicolon found', index )","\t}","\telse if ( this.state.conf === 'always' && semicolon === false ) {","\t\tthis.msg( 'missing semicolon', line.length )","\t}","","\treturn semicolon","}","","module.exports = semicolons",""],"l":{"4":1,"12":1,"13":0,"14":0,"16":0,"17":0,"19":0,"20":0,"26":0,"27":0,"30":0,"34":0,"35":0,"37":0,"38":0,"41":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/sortOrder.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/sortOrder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":16},"end":{"line":13,"column":33}}},"2":{"name":"(anonymous_2)","line":69,"loc":{"start":{"line":69,"column":30},"end":{"line":69,"column":47}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":37},"end":{"line":93,"column":56}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":95}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"4":{"start":{"line":13,"column":0},"end":{"line":107,"column":1}},"5":{"start":{"line":15,"column":1},"end":{"line":18,"column":2}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":32}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":8}},"8":{"start":{"line":27,"column":1},"end":{"line":29,"column":2}},"9":{"start":{"line":30,"column":1},"end":{"line":30,"column":19}},"10":{"start":{"line":31,"column":1},"end":{"line":31,"column":21}},"11":{"start":{"line":32,"column":1},"end":{"line":32,"column":18}},"12":{"start":{"line":33,"column":1},"end":{"line":33,"column":32}},"13":{"start":{"line":35,"column":1},"end":{"line":35,"column":40}},"14":{"start":{"line":35,"column":34},"end":{"line":35,"column":40}},"15":{"start":{"line":37,"column":1},"end":{"line":39,"column":2}},"16":{"start":{"line":38,"column":2},"end":{"line":38,"column":30}},"17":{"start":{"line":42,"column":1},"end":{"line":44,"column":2}},"18":{"start":{"line":43,"column":2},"end":{"line":43,"column":32}},"19":{"start":{"line":47,"column":1},"end":{"line":50,"column":2}},"20":{"start":{"line":48,"column":2},"end":{"line":48,"column":32}},"21":{"start":{"line":49,"column":2},"end":{"line":49,"column":37}},"22":{"start":{"line":53,"column":1},"end":{"line":53,"column":41}},"23":{"start":{"line":56,"column":1},"end":{"line":56,"column":49}},"24":{"start":{"line":59,"column":1},"end":{"line":87,"column":2}},"25":{"start":{"line":60,"column":2},"end":{"line":60,"column":30}},"26":{"start":{"line":64,"column":6},"end":{"line":87,"column":2}},"27":{"start":{"line":66,"column":2},"end":{"line":66,"column":85}},"28":{"start":{"line":69,"column":2},"end":{"line":86,"column":5}},"29":{"start":{"line":70,"column":3},"end":{"line":70,"column":40}},"30":{"start":{"line":71,"column":3},"end":{"line":71,"column":40}},"31":{"start":{"line":74,"column":3},"end":{"line":76,"column":4}},"32":{"start":{"line":75,"column":4},"end":{"line":75,"column":31}},"33":{"start":{"line":79,"column":3},"end":{"line":85,"column":4}},"34":{"start":{"line":80,"column":4},"end":{"line":80,"column":13}},"35":{"start":{"line":83,"column":8},"end":{"line":85,"column":4}},"36":{"start":{"line":84,"column":4},"end":{"line":84,"column":12}},"37":{"start":{"line":91,"column":1},"end":{"line":100,"column":2}},"38":{"start":{"line":93,"column":2},"end":{"line":99,"column":18}},"39":{"start":{"line":95,"column":3},"end":{"line":98,"column":4}},"40":{"start":{"line":96,"column":4},"end":{"line":96,"column":18}},"41":{"start":{"line":97,"column":4},"end":{"line":97,"column":10}},"42":{"start":{"line":102,"column":1},"end":{"line":104,"column":2}},"43":{"start":{"line":103,"column":2},"end":{"line":103,"column":64}},"44":{"start":{"line":106,"column":1},"end":{"line":106,"column":14}},"45":{"start":{"line":109,"column":0},"end":{"line":109,"column":26}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},{"start":{"line":15,"column":1},"end":{"line":15,"column":1}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":30}},{"start":{"line":15,"column":34},"end":{"line":15,"column":49}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},{"start":{"line":35,"column":1},"end":{"line":35,"column":1}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},{"start":{"line":37,"column":1},"end":{"line":37,"column":1}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},{"start":{"line":42,"column":1},"end":{"line":42,"column":1}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},{"start":{"line":47,"column":1},"end":{"line":47,"column":1}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},{"start":{"line":59,"column":1},"end":{"line":59,"column":1}}]},"8":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":6}},{"start":{"line":64,"column":6},"end":{"line":64,"column":6}}]},"9":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":11},"end":{"line":64,"column":40}},{"start":{"line":64,"column":44},"end":{"line":64,"column":76}}]},"10":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":51},"end":{"line":66,"column":66}},{"start":{"line":66,"column":69},"end":{"line":66,"column":85}}]},"11":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":3},"end":{"line":74,"column":3}},{"start":{"line":74,"column":3},"end":{"line":74,"column":3}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":3},"end":{"line":79,"column":3}},{"start":{"line":79,"column":3},"end":{"line":79,"column":3}}]},"13":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"14":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":1},"end":{"line":91,"column":1}},{"start":{"line":91,"column":1},"end":{"line":91,"column":1}}]},"15":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":3},"end":{"line":95,"column":3}},{"start":{"line":95,"column":3},"end":{"line":95,"column":3}}]},"16":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},{"start":{"line":102,"column":1},"end":{"line":102,"column":1}}]}},"code":["'use strict'","","var resetOnFileChange = 0","var ignoreMeRe = /[.#${}=>&*]|\\(.*\\)|(&:)|(if)|(for)|(@block)|(@import)|(@media)|(@extends)|,$/","var ordering = require( '../data/ordering.json' )","","","/**"," * @description check that selector properties are sorted accordingly"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if in order, false if not"," */","var sortOrder = function( line ) {","\t// we don't alphabetize the root yet","\tif ( this.state.context === 0 || this.state.hash ) {","\t\tthis.cache.sortOrderCache = []","\t\treturn","\t}","","\t/*","\t * 1 we strip out mixins, and whitespace, and get the line as an array","\t * 2 we need a sorted array to compare our cache against","\t * 3 equals the custom sorting array via the config (or the ordering json)","\t * 4 assume sorted by default","\t * 5 alphabetical by default, if custom array we output a shorter msg","\t */","\tvar arr = this.splitAndStrip(","\t\tnew RegExp( /[\\s\\t,:]/ ), line.replace( /(\\(.+\\))/, '' )","\t) // 1","\tvar sortedArr = [] // 2","\tvar orderingArr = [] // 3","\tvar sorted = true // 4","\tvar orderName = this.state.conf // 5","","\tif ( ignoreMeRe.test( arr[0] ) ) return","","\tif ( Array.isArray( this.state.conf ) ) {","\t\torderName = 'custom grouped'","\t}","","\t// if current context switched, reset array","\tif ( this.state.context !== this.state.prevContext ) {","\t\tthis.cache.sortOrderCache = []","\t}","","\t// reset on file change","\tif ( this.cache.file !== resetOnFileChange ) {","\t\tthis.cache.sortOrderCache = []","\t\tresetOnFileChange = this.cache.file","\t}","","\t// then we push the latest property to the cache","\tthis.cache.sortOrderCache.push( arr[0] )","","\t// create a copy of the cache now for comparison against","\tsortedArr = this.cache.sortOrderCache.slice( 0 )","","\t// and then sort it (by default alphabetically)","\tif ( this.state.conf === 'alphabetical' ) {","\t\tsortedArr = sortedArr.sort()","\t}","\t// if not default, we can either use the grouped option","\t// or a custom sorting order, specificed by a config file","\telse if ( this.state.conf === 'grouped' || Array.isArray( this.state.conf ) ) {","\t\t// use custom ordering if specified, or fall back to in-built grouped ordering","\t\torderingArr = Array.isArray( this.state.conf ) ? this.state.conf : ordering.grouped","","\t\t// iterate over our cache copy, and sort it according to our config","\t\tsortedArr = sortedArr.sort( function( a, b ) {","\t\t\tvar aIndex = orderingArr.indexOf( a )","\t\t\tvar bIndex = orderingArr.indexOf( b )","","\t\t\t// allow properties that don't exist in ordering array to be last","\t\t\tif ( bIndex < 0 ) {","\t\t\t\tbIndex = orderingArr.length","\t\t\t}","","\t\t\t// -1 if our 'sorted (not yet sorted)' array is not in the right order","\t\t\tif ( aIndex < bIndex ) {","\t\t\t\treturn -1","\t\t\t}","\t\t\t// and 1 if it is","\t\t\telse if ( bIndex < aIndex ) {","\t\t\t\treturn 1","\t\t\t}","\t\t} )","\t}","","\t// now compare our two arrays","\t// one sorted according to the config, and one as appears in the file","\tif ( this.state.context === this.state.prevContext ) {","\t\t// compare each value individually","\t\tthis.cache.sortOrderCache.forEach( function( val, i ) {","\t\t\t// if any value doesn't match quit the forEach","\t\t\tif ( sortedArr[i] !== this.cache.sortOrderCache[i] ) {","\t\t\t\tsorted = false","\t\t\t\treturn","\t\t\t}","\t\t}.bind( this ) )","\t}","","\tif ( sorted === false ) {","\t\tthis.msg( 'prefer ' + orderName + ' when sorting properties' )","\t}","","\treturn sorted","}","","module.exports = sortOrder",""],"l":{"3":1,"4":1,"5":1,"13":1,"15":0,"16":0,"17":0,"27":0,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0,"38":0,"42":0,"43":0,"47":0,"48":0,"49":0,"53":0,"56":0,"59":0,"60":0,"64":0,"66":0,"69":0,"70":0,"71":0,"74":0,"75":0,"79":0,"80":0,"83":0,"84":0,"91":0,"93":0,"95":0,"96":0,"97":0,"102":0,"103":0,"106":0,"109":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/stackedProperties.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/stackedProperties.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":24},"end":{"line":12,"column":41}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"2":{"start":{"line":12,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":13,"column":1},"end":{"line":13,"column":21}},"4":{"start":{"line":14,"column":1},"end":{"line":14,"column":82}},"5":{"start":{"line":15,"column":1},"end":{"line":15,"column":49}},"6":{"start":{"line":17,"column":1},"end":{"line":19,"column":2}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":17}},"8":{"start":{"line":21,"column":1},"end":{"line":23,"column":2}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":66}},"10":{"start":{"line":25,"column":1},"end":{"line":25,"column":16}},"11":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":34}},{"start":{"line":17,"column":38},"end":{"line":17,"column":52}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":33}},{"start":{"line":21,"column":37},"end":{"line":21,"column":54}}]}},"code":["'use strict'","","// if semicolons on line, but not ending the line, prolly a one-liner","var semiTest = /;+(?!$)/gm","","","/**"," * @description disallow one-liners"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if one-liner found, false if not"," */","var stackedProperties = function( line ) {","\tvar oneLiner = false","\tvar trimmedLine = line.replace( /(( '.*')|( \".*\")|('.*')|(\".*\"))+;*/, '' ).trim()","\tvar arr = this.splitAndStrip( ';', trimmedLine )","","\tif ( semiTest.test( trimmedLine ) || arr.length > 1 ) {","\t\toneLiner = true","\t}","","\tif ( this.state.conf === 'never' && oneLiner === true ) {","\t\tthis.msg( 'avoid one liners. put properties on their own line' )","\t}","","\treturn oneLiner","}","","module.exports = stackedProperties",""],"l":{"4":1,"12":1,"13":0,"14":0,"15":0,"17":0,"18":0,"21":0,"22":0,"25":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/trailingWhitespace.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/trailingWhitespace.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":52}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":14,"column":0},"end":{"line":28,"column":1}},"4":{"start":{"line":15,"column":1},"end":{"line":15,"column":23}},"5":{"start":{"line":16,"column":1},"end":{"line":16,"column":50}},"6":{"start":{"line":19,"column":1},"end":{"line":21,"column":2}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":19}},"8":{"start":{"line":23,"column":1},"end":{"line":25,"column":2}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":56}},"10":{"start":{"line":27,"column":1},"end":{"line":27,"column":18}},"11":{"start":{"line":30,"column":0},"end":{"line":30,"column":35}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":37}},{"start":{"line":19,"column":41},"end":{"line":19,"column":54}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},{"start":{"line":23,"column":1},"end":{"line":23,"column":1}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":33}},{"start":{"line":23,"column":37},"end":{"line":23,"column":47}}]}},"code":["'use strict'","","// check for unnecessary tabs or whitespace at eol","var whitespaceRe = /[ \\t]+$/","// anything BUT whitespace (we dont want to return false positives on empty lines)","var anythingElseRe = /[^ \\t]/","","/**"," * @description check for trailing whitespace"," * @param  {string} [line] curr line being linted"," * @param {string} [origLine] curr line before being stripped"," * @return {boolean} true if whitespace found, false if not"," */","var trailingWhitespace = function( line, origLine ) {","\tvar whitespace = false","\tvar hasWhitespace = whitespaceRe.exec( origLine )","","\t// not an empty line, with whitespace at the end","\tif ( anythingElseRe.test( origLine ) && hasWhitespace ) {","\t\twhitespace = true","\t}","","\tif ( this.state.conf === 'never' && whitespace ) {","\t\tthis.msg( 'trailing whitespace', hasWhitespace.index )","\t}","","\treturn whitespace","}","","module.exports = trailingWhitespace",""],"l":{"4":1,"6":1,"14":1,"15":0,"16":0,"19":0,"20":0,"23":0,"24":0,"27":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/universal.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/universal.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":65}},"2":{"start":{"line":11,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":12,"column":1},"end":{"line":12,"column":32}},"4":{"start":{"line":13,"column":1},"end":{"line":13,"column":27}},"5":{"start":{"line":13,"column":21},"end":{"line":13,"column":27}},"6":{"start":{"line":15,"column":1},"end":{"line":15,"column":25}},"7":{"start":{"line":17,"column":1},"end":{"line":19,"column":2}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}},"9":{"start":{"line":21,"column":1},"end":{"line":23,"column":2}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":47}},"11":{"start":{"line":25,"column":1},"end":{"line":25,"column":20}},"12":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":33}},{"start":{"line":21,"column":37},"end":{"line":21,"column":58}}]}},"code":["'use strict'","","// checks if * is a valid use case or not","var universalRe = /( |\\w|\\d|'|\"|\\*|\\/)(\\*)( |\\w|\\d|'|\"|\\*|\\$|\\=)/","","/**","* @description check for * selector","* @param {string} [line] current line being linted","* @returns {boolean} true if * on line, false if not","*/","var universal = function( line ) {","\tvar index = line.indexOf( '*' )","\tif ( index === -1 ) return","","\tvar hasUniversal = false","","\tif ( !universalRe.test( line ) ) {","\t\thasUniversal = true","\t}","","\tif ( this.state.conf === 'never' && hasUniversal === true ) {","\t\tthis.msg( '* selector is disallowed', index )","\t}","","\treturn hasUniversal","}","","module.exports = universal",""],"l":{"4":1,"11":1,"12":0,"13":0,"15":0,"17":0,"18":0,"21":0,"22":0,"25":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/valid.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/valid.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"valid","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":40}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":32},"end":{"line":56,"column":48}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":33},"end":{"line":63,"column":50}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":35},"end":{"line":70,"column":54}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":46},"end":{"line":78,"column":64}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":60}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":77}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":78}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":46}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"8":{"start":{"line":24,"column":0},"end":{"line":88,"column":1}},"9":{"start":{"line":26,"column":1},"end":{"line":26,"column":63}},"10":{"start":{"line":26,"column":55},"end":{"line":26,"column":62}},"11":{"start":{"line":29,"column":1},"end":{"line":29,"column":20}},"12":{"start":{"line":30,"column":1},"end":{"line":30,"column":63}},"13":{"start":{"line":33,"column":1},"end":{"line":33,"column":44}},"14":{"start":{"line":33,"column":38},"end":{"line":33,"column":44}},"15":{"start":{"line":40,"column":1},"end":{"line":47,"column":2}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":16}},"17":{"start":{"line":50,"column":1},"end":{"line":52,"column":2}},"18":{"start":{"line":51,"column":2},"end":{"line":51,"column":47}},"19":{"start":{"line":55,"column":1},"end":{"line":59,"column":2}},"20":{"start":{"line":56,"column":2},"end":{"line":58,"column":18}},"21":{"start":{"line":57,"column":3},"end":{"line":57,"column":70}},"22":{"start":{"line":62,"column":1},"end":{"line":66,"column":2}},"23":{"start":{"line":63,"column":2},"end":{"line":65,"column":18}},"24":{"start":{"line":64,"column":3},"end":{"line":64,"column":72}},"25":{"start":{"line":69,"column":1},"end":{"line":74,"column":2}},"26":{"start":{"line":70,"column":2},"end":{"line":73,"column":5}},"27":{"start":{"line":72,"column":3},"end":{"line":72,"column":61}},"28":{"start":{"line":77,"column":1},"end":{"line":81,"column":2}},"29":{"start":{"line":78,"column":2},"end":{"line":80,"column":5}},"30":{"start":{"line":79,"column":3},"end":{"line":79,"column":26}},"31":{"start":{"line":83,"column":1},"end":{"line":85,"column":2}},"32":{"start":{"line":84,"column":2},"end":{"line":84,"column":61}},"33":{"start":{"line":87,"column":1},"end":{"line":87,"column":15}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},{"start":{"line":26,"column":1},"end":{"line":26,"column":1}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":27}},{"start":{"line":26,"column":31},"end":{"line":26,"column":50}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},{"start":{"line":33,"column":1},"end":{"line":33,"column":1}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},{"start":{"line":40,"column":1},"end":{"line":40,"column":1}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":26}},{"start":{"line":41,"column":2},"end":{"line":41,"column":17}},{"start":{"line":42,"column":2},"end":{"line":42,"column":44}},{"start":{"line":43,"column":2},"end":{"line":43,"column":30}},{"start":{"line":44,"column":2},"end":{"line":44,"column":28}},{"start":{"line":45,"column":2},"end":{"line":45,"column":22}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},{"start":{"line":50,"column":1},"end":{"line":50,"column":1}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":1},"end":{"line":55,"column":1}},{"start":{"line":55,"column":1},"end":{"line":55,"column":1}}]},"8":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":10},"end":{"line":57,"column":24}},{"start":{"line":57,"column":28},"end":{"line":57,"column":70}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},{"start":{"line":62,"column":1},"end":{"line":62,"column":1}}]},"10":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":10},"end":{"line":64,"column":25}},{"start":{"line":64,"column":29},"end":{"line":64,"column":72}}]},"11":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},{"start":{"line":69,"column":1},"end":{"line":69,"column":1}}]},"12":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":10},"end":{"line":72,"column":33}},{"start":{"line":72,"column":37},"end":{"line":72,"column":61}}]},"13":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},{"start":{"line":77,"column":1},"end":{"line":77,"column":1}}]},"14":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":1},"end":{"line":83,"column":1}},{"start":{"line":83,"column":1},"end":{"line":83,"column":1}}]}},"code":["'use strict'","","// 1 grab attribute selectors OR mixins that are by themselves","// 2 strip attr selectors or classes/ids from elements","// 3 ignore syntax","// 4 ignore numbers","// 5 ( from || to ) are only valid inside @keyframe","// 6 the actual JSON property whitelist we will test against","// 7 if interpolated value just give it a pass","var attrOrMixinRe = /^\\[\\S+\\]|({[\\S]+})|(\\([\\S ]+\\))|(\\(\\))/ // 1","var stripRe = /(?=\\S)\\[\\S+\\]|(\\.|#)(\\w|-)+/ // /(?=\\S)\\[\\S+\\]/ // 2","var ignoreRe = /^[$.#]|[&=>+~]|if|for|else|return|@block|calc|@extend|@media/ // 3","var numRe = /\\d+?(?=px|%|em|rem|v(h|w)|v(min|max)|ex|ch|mm|cm|in|pt|pc|mozmm)/ // 4","var keyRe = /((from)|(to))+(?= $| {| \\d|\\n|{)/ // 5","var validJSON = require( '../data/valid.json' ) // 6","var interpolatedRe = /( *{\\S+} *)/ // 7","","","/**","* @description check against a JSON of all valid css properties and values","* @param {string} [line] current line being linted","* @returns {boolean | undefined} true if problem, false if no prob, undefined if we skipped","*/","module.exports = function valid( line ) {","\t// from and to are valid keyframes properties, but not outside that context","\tif ( !this.state.keyframes && line.match( keyRe ) ) { return }","","\t// 1 split by tabs and spaces, tabs mess with pattern matching","\tvar isValid = false","\tvar arr = this.splitAndStrip( new RegExp( /[\\s\\t,:]/ ), line ) // 1","","\t// if not splittable for some reason","\tif ( typeof arr[0] === 'undefined' ) return","","\t// in order, let line be considered valid if:","\t// 1 we are in a hash or css block or root block","\t// 2 classname, varname, id, or syntax.","\t// 3 if the selector only consists of an attr or mixin (which can be custom)","\t// 4 if it's a number","\tif ( this.state.hashOrCSS || // 1","\t\tthis.state.root || // 1","\t\tinterpolatedRe.test( this.cache.origLine ) ||","\t\tignoreRe.test( line.trim() ) || // 2","\t\tattrOrMixinRe.test( line ) || // 3","\t\tnumRe.test( arr[0] ) ) { // 3","\t\tisValid = true","\t}","","\t// if using an attr selector ( div[madeUpAttribute] ), strip it out ( div )","\tif ( !isValid ) {","\t\tarr[0] = arr[0].replace( stripRe, '' ).trim()","\t}","","\t// if no match yet, check for css && prefix + css, will return true at first match","\tif ( !isValid ) {","\t\tisValid = validJSON.css.some( function( css ) {","\t\t\treturn arr[0] === css || this.checkPrefix( arr[0], css, validJSON )","\t\t}.bind( this ) )","\t}","","\t// if no match yet, try html && html + pseudo","\tif ( !isValid ) {","\t\tisValid = validJSON.html.some( function( html ) {","\t\t\treturn arr[0] === html || this.checkPseudo( arr[0], html, validJSON )","\t\t}.bind( this ) )","\t}","","\t// if no match yet, try pseudo as standalone","\tif ( !isValid ) {","\t\tisValid = validJSON.pseudo.some( function( pseudo ) {","\t\t\t// psuedo selectors could have one of two colons","\t\t\treturn ':' + arr[0] === pseudo || '::' + arr[0] === pseudo","\t\t} )","\t}","","\t// if no match yet, try declared mixins and custom properties","\tif ( !isValid ) {","\t\tisValid = this.cache.customProperties.some( function( mixin ) {","\t\t\treturn arr[0] === mixin","\t\t} )","\t}","","\tif ( isValid === false ) {","\t\tthis.msg( 'property is not valid', line.indexOf( arr[0] ) )","\t}","","\treturn isValid","}",""],"l":{"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"24":1,"26":0,"29":0,"30":0,"33":0,"40":0,"46":0,"50":0,"51":0,"55":0,"56":0,"57":0,"62":0,"63":0,"64":0,"69":0,"70":0,"72":0,"77":0,"78":0,"79":0,"83":0,"84":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/zeroUnits.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/zeroUnits.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":16},"end":{"line":13,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":85}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"4":{"start":{"line":13,"column":0},"end":{"line":47,"column":1}},"5":{"start":{"line":17,"column":1},"end":{"line":21,"column":2}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":8}},"7":{"start":{"line":23,"column":1},"end":{"line":23,"column":21}},"8":{"start":{"line":24,"column":1},"end":{"line":24,"column":42}},"9":{"start":{"line":25,"column":1},"end":{"line":25,"column":40}},"10":{"start":{"line":26,"column":1},"end":{"line":26,"column":37}},"11":{"start":{"line":27,"column":1},"end":{"line":27,"column":41}},"12":{"start":{"line":30,"column":1},"end":{"line":37,"column":2}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"14":{"start":{"line":35,"column":6},"end":{"line":37,"column":2}},"15":{"start":{"line":36,"column":2},"end":{"line":36,"column":19}},"16":{"start":{"line":39,"column":1},"end":{"line":44,"column":2}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"18":{"start":{"line":42,"column":6},"end":{"line":44,"column":2}},"19":{"start":{"line":43,"column":2},"end":{"line":43,"column":53}},"20":{"start":{"line":46,"column":1},"end":{"line":46,"column":17}},"21":{"start":{"line":49,"column":0},"end":{"line":49,"column":26}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":26}},{"start":{"line":18,"column":2},"end":{"line":18,"column":28}},{"start":{"line":19,"column":2},"end":{"line":19,"column":28}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},{"start":{"line":30,"column":1},"end":{"line":30,"column":1}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":11}},{"start":{"line":30,"column":15},"end":{"line":30,"column":22}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"6":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":17}},{"start":{"line":35,"column":23},"end":{"line":35,"column":31}},{"start":{"line":35,"column":35},"end":{"line":35,"column":45}}]},"7":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},{"start":{"line":39,"column":1},"end":{"line":39,"column":1}}]},"8":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":11}},{"start":{"line":39,"column":15},"end":{"line":39,"column":34}}]},"9":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"10":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":11},"end":{"line":42,"column":17}},{"start":{"line":42,"column":21},"end":{"line":42,"column":40}}]}},"code":["'use strict'","","var aboveZeroRe = /\\d0/","var hasUnitRe = /[ :]0+?(?=px|%|em|rem|v(h|w)|v(min|max)|ex|ch|mm|cm|in|pt|pc|mozmm)/","var relativeValRe = /line-height|font-size|font-weight/","","","/**","* @description check for 0unit","* @param {string} [line] current line being linted","* @returns {boolean | undefined} true if has units, else false, undefined if skipped","*/","var zeroUnits = function( line ) {","\t// if in keyframes dont check","\t// if no 0 on line dont check","\t// if relative values like font-weight, dont check","\tif ( this.state.keyframes ||","\t\tline.indexOf( '0' ) === -1 ||","\t\trelativeValRe.test( line ) ) {","\t\treturn","\t}","","\tvar isCorrect = true","\tvar always = this.state.conf === 'always'","\tvar never = this.state.conf === 'never'","\tvar hasUnit = hasUnitRe.exec( line )","\tvar aboveZero = aboveZeroRe.exec( line )","","\t// if config set to never and 0 is followed by any unit","\tif ( never && hasUnit ) {","\t\tisCorrect = false","\t}","\t// if config set to always, we need to do an extra check","\t// to avoid throwing false positions on numbers like 50px","\telse if ( always && ( !hasUnit && !aboveZero ) ) {","\t\tisCorrect = false","\t}","","\tif ( never && isCorrect === false ) {","\t\tthis.msg( '0 is preferred. Unit value is unnecessary', hasUnit.index )","\t}","\telse if ( always && isCorrect === false ) {","\t\tthis.msg( 'Including the unit value is preferred' )","\t}","","\treturn isCorrect","}","","module.exports = zeroUnits",""],"l":{"3":1,"4":1,"5":1,"13":1,"17":0,"20":0,"23":0,"24":0,"25":0,"26":0,"27":0,"30":0,"31":0,"35":0,"36":0,"39":0,"40":0,"42":0,"43":0,"46":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/zIndexNormalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/checks/zIndexNormalize.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":22},"end":{"line":9,"column":39}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":29,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":10,"column":22}},"3":{"start":{"line":11,"column":1},"end":{"line":11,"column":63}},"4":{"start":{"line":12,"column":1},"end":{"line":12,"column":38}},"5":{"start":{"line":15,"column":1},"end":{"line":18,"column":2}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":8}},"7":{"start":{"line":20,"column":1},"end":{"line":22,"column":2}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":18}},"9":{"start":{"line":24,"column":1},"end":{"line":26,"column":2}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":59}},"11":{"start":{"line":28,"column":1},"end":{"line":28,"column":17}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":32}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},{"start":{"line":15,"column":1},"end":{"line":15,"column":1}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":36}},{"start":{"line":16,"column":2},"end":{"line":16,"column":31}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},{"start":{"line":20,"column":1},"end":{"line":20,"column":1}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":18}},{"start":{"line":20,"column":22},"end":{"line":20,"column":61}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]}},"code":["'use strict'","","","/**","* @description check for z-index values that aren't normalized","* @param {string} [line] current line being linted","* @returns {boolean} true if not normalized, false if normalized","*/","var zIndexNormalize = function( line ) {","\tvar badZIndex = false","\tvar arr = this.splitAndStrip( new RegExp( /[\\s\\t,:]/ ), line )","\tvar index = line.indexOf( 'z-index' )","","\t// ignore 0 or -1 values","\tif ( arr[ arr.length - 1 ] === '-1' ||","\t\tarr[ arr.length - 1 ] === '0' ) {","\t\treturn","\t}","","\tif ( index !== -1 && arr[ arr.length - 1 ] % this.state.conf ) {","\t\tbadZIndex = true","\t}","","\tif ( badZIndex === true ) {","\t\tthis.msg( 'this z-index value is not normalized', index )","\t}","","\treturn badZIndex","}","","module.exports = zIndexNormalize",""],"l":{"9":1,"10":0,"11":0,"12":0,"15":0,"17":0,"20":0,"21":0,"24":0,"25":0,"28":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/cache.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/cache.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}}},"branchMap":{},"code":["var path = require( 'path' )","","// the main cache object","var cache = {","\tcol: null, // column number for warning if applicable","\tcomment: '', // the current line comment on the line, if there is one","\tcustomProperties: [], // an array of all declared mixins OR custom properties","\terrs: [], // array of errors detected so far","\tfile: '', // curr filename we're testing","\tfiles: [], // all files as an arr","\tfilesLen: 0, // # of files we're testing","\tfileNo: 0, // curr # of filesLen we're on","\tline: '', // curr line we're testing","\tlineNo: 0, // curr line number we're testing","\tmsg: '', // the done message (55 warnings blah blah)","\tmessages: [], // array of message objects, containing all data needed to output","\torigLine: '', // original line before stripping/trimming","\tprevFile: '', // the previous file","\tprevFileNo: 0, // prev file no","\tprevLine: '', // the previous line","\trule: '', // rule name for current check","\tsCache: { '0': [] }, // each key is an array of selectors in that context","\tsortOrderCache: [], // we keep a context based arr of selectors here to check sort orde","\twarnings: [], // array of the errors detected so far","\tzCache: [] // array of z-index uses","}","","module.exports = cache",""],"l":{"1":1,"4":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/config.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":83,"column":1}},"2":{"start":{"line":85,"column":0},"end":{"line":85,"column":23}}},"branchMap":{},"code":["/**"," * default configuration object"," * this is what the linter will run when no config file is passed"," */","var config = {","\t// check for @block when defining blocks","\tblocks: false,","\t// check for { or }, unless used in a hash","\tbrackets: 'never',","\t// enforce or disallow colons","\tcolons: 'always',","\t// check for hex colors used without variables","\tcolors: 'always',","\t// check for spaces after commas (0, 0, 0, .18)","\tcommaSpace: 'always',","\t// check for space after line comment","\tcommentSpace: 'always',","\t// if never disallow css literals","\tcssLiteral: 'never',","\t// set a maximum selector depth (dont nest more than 4 deep)","\tdepthLimit: false,","\t// check if properties or selectors are duplicate","\tduplicates: true,","\t// check for margin 0 0 0 0 and recommend margin 0","\tefficient: 'always',","\t// prefer a specific syntax when using @extends (or @extend)","\textendPref: false,","\t// throw duplicate selector warning across all files instead of curr file","\tglobalDupe: false,","\t// group reporter output by file or go sequentially","\tgroupOutputByFile: true,","\t// manipulate terminal output with or without an additional reporter","\treporterOptions: {","\t\tcolumns: ['lineData', 'severity', 'description', 'rule'],","\t\tcolumnSplitter: '  ',","\t\tshowHeaders: false,","\t\ttruncate: true","\t},","\t// how many spaces should we prefer when indenting, pass in false if hard tabs","\tindentPref: false,","\t// enforce or disallow leading zeroes","\tleadingZero: 'never',","\t// exit if over error limit","\tmaxErrors: false,","\t// exit if over warning limit","\tmaxWarnings: false,","\t// check for mixed spaces and tabs","\tmixed: false,","\t// lowercase-dash, camelCase, lowercase_underscore, BEM or false (dont check)","\tnamingConvention: false,","\t// if true, then check classes and ids, if false just check variables","\tnamingConventionStrict: false,","\t// check for use of border none or outline none, prefer 0","\tnone: 'never',","\t// disallow !importants","\tnoImportant: true,","\t// check for extra space inside parens","\tparenSpace: false,","\t// only allow @extending of placeholder vars","\tplaceholders: 'always',","\t// check for $ when declaring vars (doesnt check use)","\tprefixVarsWithDollar: 'always',","\t// single or double quotes, or false to not check","\tquotePref: false,","\t// default reporter","\treporter: '../core/reporter',","\t// disallow or enforce semicolons","\tsemicolons: 'never',","\t// alphabetical, grouped, Array<String> or false (no check)","\tsortOrder: 'alphabetical',","\t// no one liners","\tstackedProperties: 'never',","\t// check for trailing whitespace","\ttrailingWhitespace: 'never',","\t// check for use of * and recommend against it","\tuniversal: false,","\t// check if prop or value is a valid assignment","\tvalid: true,","\t// check for use of 0px | 0em | 0rem | 0% | etc and recommend 0 instead","\tzeroUnits: 'never',","\t// suggest a normalized z index value, base of whatever this is","\tzIndexNormalize: false","}","","module.exports = config",""],"l":{"5":1,"85":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/done.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/done.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"getExitCode","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":75}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":22}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":12},"end":{"line":35,"column":28}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":32},"end":{"line":39,"column":51}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":50},"end":{"line":53,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":16,"column":1}},"3":{"start":{"line":6,"column":1},"end":{"line":11,"column":2}},"4":{"start":{"line":7,"column":2},"end":{"line":10,"column":15}},"5":{"start":{"line":8,"column":3},"end":{"line":8,"column":41}},"6":{"start":{"line":8,"column":33},"end":{"line":8,"column":41}},"7":{"start":{"line":10,"column":7},"end":{"line":10,"column":15}},"8":{"start":{"line":13,"column":1},"end":{"line":13,"column":80}},"9":{"start":{"line":13,"column":72},"end":{"line":13,"column":80}},"10":{"start":{"line":15,"column":1},"end":{"line":15,"column":9}},"11":{"start":{"line":22,"column":0},"end":{"line":93,"column":1}},"12":{"start":{"line":23,"column":1},"end":{"line":23,"column":26}},"13":{"start":{"line":24,"column":1},"end":{"line":24,"column":13}},"14":{"start":{"line":25,"column":1},"end":{"line":25,"column":23}},"15":{"start":{"line":26,"column":1},"end":{"line":26,"column":15}},"16":{"start":{"line":27,"column":1},"end":{"line":27,"column":42}},"17":{"start":{"line":28,"column":1},"end":{"line":28,"column":45}},"18":{"start":{"line":30,"column":1},"end":{"line":30,"column":136}},"19":{"start":{"line":33,"column":1},"end":{"line":72,"column":2}},"20":{"start":{"line":34,"column":2},"end":{"line":35,"column":46}},"21":{"start":{"line":35,"column":30},"end":{"line":35,"column":43}},"22":{"start":{"line":38,"column":2},"end":{"line":56,"column":3}},"23":{"start":{"line":39,"column":3},"end":{"line":48,"column":6}},"24":{"start":{"line":40,"column":4},"end":{"line":40,"column":26}},"25":{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},"26":{"start":{"line":43,"column":5},"end":{"line":43,"column":39}},"27":{"start":{"line":46,"column":5},"end":{"line":46,"column":35}},"28":{"start":{"line":53,"column":3},"end":{"line":55,"column":6}},"29":{"start":{"line":54,"column":4},"end":{"line":54,"column":70}},"30":{"start":{"line":58,"column":2},"end":{"line":65,"column":3}},"31":{"start":{"line":59,"column":3},"end":{"line":64,"column":4}},"32":{"start":{"line":60,"column":4},"end":{"line":60,"column":21}},"33":{"start":{"line":63,"column":4},"end":{"line":63,"column":50}},"34":{"start":{"line":67,"column":2},"end":{"line":67,"column":23}},"35":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"36":{"start":{"line":70,"column":3},"end":{"line":70,"column":21}},"37":{"start":{"line":76,"column":1},"end":{"line":79,"column":2}},"38":{"start":{"line":77,"column":2},"end":{"line":77,"column":46}},"39":{"start":{"line":78,"column":2},"end":{"line":78,"column":44}},"40":{"start":{"line":81,"column":1},"end":{"line":86,"column":2}},"41":{"start":{"line":89,"column":1},"end":{"line":89,"column":21}},"42":{"start":{"line":90,"column":1},"end":{"line":90,"column":25}},"43":{"start":{"line":92,"column":1},"end":{"line":92,"column":19}},"44":{"start":{"line":95,"column":0},"end":{"line":95,"column":21}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},{"start":{"line":6,"column":1},"end":{"line":6,"column":1}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]},"3":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":3},"end":{"line":8,"column":3}},{"start":{"line":8,"column":3},"end":{"line":8,"column":3}}]},"4":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"5":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":37}},{"start":{"line":13,"column":41},"end":{"line":13,"column":69}}]},"6":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":39}},{"start":{"line":28,"column":43},"end":{"line":28,"column":45}}]},"7":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},{"start":{"line":33,"column":1},"end":{"line":33,"column":1}}]},"8":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"9":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":7},"end":{"line":38,"column":12}},{"start":{"line":38,"column":16},"end":{"line":38,"column":35}}]},"10":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"11":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"12":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":3},"end":{"line":59,"column":3}},{"start":{"line":59,"column":3},"end":{"line":59,"column":3}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"14":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},{"start":{"line":76,"column":1},"end":{"line":76,"column":1}}]},"15":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":17},"end":{"line":77,"column":36}},{"start":{"line":77,"column":40},"end":{"line":77,"column":44}}]}},"code":["'use strict'","","var columnify = require( 'columnify' )","","function getExitCode( errsLength, warningsLength, maxErrors, maxWarnings ) {","\tif ( errsLength > 0 ) {","\t\tif ( typeof maxErrors === 'number' ) {","\t\t\tif ( errsLength > maxErrors ) return 1","\t\t}","\t\telse return 1","\t}","","\tif ( typeof maxWarnings === 'number' && warningsLength > maxWarnings ) return 1","","\treturn 0","}","","/**"," * @description outputs our messages, wipes errs/warnings if watching"," * @returns {Object | Function} returns process exit if not watching, or obj otherwise"," */","var done = function() {","\tvar warningsOrErrors = []","\tvar msg = ''","\tvar groupedByFile = {}","\tvar msgGrouped","\tvar group = this.config.groupOutputByFile","\tvar opts = this.config.reporterOptions || {}","","\tthis.state.exitCode = getExitCode( this.cache.errs.length, this.cache.warnings.length, this.config.maxErrors, this.config.maxWarnings )","","\t// when testing we want to silence the console a bit, so we have the quiet option","\tif ( !this.state.quiet ) {","\t\twarningsOrErrors = [].concat( this.cache.errs, this.cache.warnings )","\t\t\t.filter( function( str ) { return !!str } )","","\t\t// by default group warnings and errs by file","\t\tif ( group && this.cache.messages ) {","\t\t\tthis.cache.messages.forEach( function( output ) {","\t\t\t\tvar file = output.file","","\t\t\t\tif ( groupedByFile.hasOwnProperty( file ) ) {","\t\t\t\t\tgroupedByFile[file].push( output )","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tgroupedByFile[file] = [output]","\t\t\t\t}","\t\t\t} )","","\t\t\t// iterate over arrays of message objects","\t\t\t// each array consists of all the errors and warnings for a file","\t\t\t// columnify the errors/warnings and prefix them with the file name","\t\t\tmsgGrouped = Object.keys( groupedByFile ).map( function( key ) {","\t\t\t\treturn key + '\\n' + columnify( groupedByFile[key], opts ) + '\\n\\n'","\t\t\t} )","\t\t}","","\t\tif ( warningsOrErrors.length ) {","\t\t\tif ( group ) {","\t\t\t\tmsg += msgGrouped","\t\t\t}","\t\t\telse {","\t\t\t\tmsg = warningsOrErrors.join( '\\n\\n' ) + '\\n\\n'","\t\t\t}","\t\t}","","\t\tmsg += this.cache.msg","","\t\tif ( msg ) {","\t\t\tconsole.log( msg )","\t\t}","\t}","","\t// don't kill the linter if watch is watching","\t// else there's no more to do, so exit the process","\tif ( !this.state.watching ) {","\t\tthis.callback( this.state.exitCode || null )","\t\treturn process.exit( this.state.exitCode )","\t}","","\tvar returnValue = {","\t\terrs: this.cache.errs.slice( 0 ),","\t\twarnings: this.cache.warnings.slice( 0 ),","\t\texitCode: this.state.exitCode,","\t\tmsg: this.cache.msg","\t}","","\t// if watching we reset the errors/warnings arrays","\tthis.cache.errs = []","\tthis.cache.warnings = []","","\treturn returnValue","}","","module.exports = done",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"10":0,"13":0,"15":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"42":0,"43":0,"46":0,"53":0,"54":0,"58":0,"59":0,"60":0,"63":0,"67":0,"69":0,"70":0,"76":0,"77":0,"78":0,"81":0,"89":0,"90":0,"92":0,"95":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/init.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/init.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":11},"end":{"line":9,"column":22}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":11},"end":{"line":18,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":1}},"3":{"start":{"line":18,"column":0},"end":{"line":49,"column":1}},"4":{"start":{"line":19,"column":1},"end":{"line":19,"column":52}},"5":{"start":{"line":21,"column":1},"end":{"line":21,"column":47}},"6":{"start":{"line":25,"column":1},"end":{"line":25,"column":112}},"7":{"start":{"line":29,"column":1},"end":{"line":37,"column":2}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":45}},"9":{"start":{"line":32,"column":6},"end":{"line":37,"column":2}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":41}},"12":{"start":{"line":40,"column":1},"end":{"line":40,"column":65}},"13":{"start":{"line":41,"column":1},"end":{"line":41,"column":50}},"14":{"start":{"line":44,"column":1},"end":{"line":46,"column":2}},"15":{"start":{"line":45,"column":2},"end":{"line":45,"column":21}},"16":{"start":{"line":48,"column":1},"end":{"line":48,"column":19}},"17":{"start":{"line":51,"column":0},"end":{"line":51,"column":21}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":21},"end":{"line":19,"column":28}},{"start":{"line":19,"column":32},"end":{"line":19,"column":34}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":31},"end":{"line":25,"column":49}},{"start":{"line":25,"column":53},"end":{"line":25,"column":81}},{"start":{"line":25,"column":85},"end":{"line":25,"column":112}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},{"start":{"line":29,"column":1},"end":{"line":29,"column":1}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":19},"end":{"line":40,"column":29}},{"start":{"line":40,"column":33},"end":{"line":40,"column":48}},{"start":{"line":40,"column":52},"end":{"line":40,"column":65}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":17},"end":{"line":41,"column":30}},{"start":{"line":41,"column":34},"end":{"line":41,"column":50}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},{"start":{"line":44,"column":1},"end":{"line":44,"column":1}}]}},"code":["'use strict'","","var defaults = require( 'lodash.defaults' )","","var defaultOptions = {","\twatch: false,","\tconfig: null,","\tstrict: false,","\tcallback: function() {}","}","","/**"," * @description initialization function, does routing and kicks it all off"," * @param {Object} [options] options passed to stylint"," * @param {String} [pathPassed] path to files to lint"," * @return {Function} always returns a function, determined by cli flags"," */","var init = function( options, pathPassed ) {","\toptions = defaults( options || {}, defaultOptions )","","\tthis.config = this.setConfig( options.config )","","\t// if you want to use transparent mixins, pass in an array of them","\t// this also covers the (more common probably) custom property use case","\tthis.cache.customProperties = this.config.mixins || this.config.customProperties || this.cache.customProperties","","\t// we do the check here just in case","\t// they don't pass in a reporter when using a custom config","\tif ( options.reporter ) {","\t\tthis.reporter = require( options.reporter )","\t}","\telse if ( this.config.reporter ) {","\t\tthis.reporter = require( this.config.reporter )","\t}","\telse {","\t\tthis.reporter = require( './reporter' )","\t}","","\t// if path/ passed in use that for the dir","\tthis.state.path = pathPassed || this.state.path || process.cwd()","\tthis.callback = this.callback || options.callback","","\t// fire watch or read based on flag","\tif ( options.watch ) {","\t\treturn this.watch()","\t}","","\treturn this.read()","}","","module.exports = init",""],"l":{"3":1,"5":1,"18":1,"19":0,"21":0,"25":0,"29":0,"30":0,"32":0,"33":0,"36":0,"40":0,"41":0,"44":0,"45":0,"48":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/lint.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/lint.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":11},"end":{"line":8,"column":22}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":41,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":16}},"3":{"start":{"line":10,"column":1},"end":{"line":10,"column":55}},"4":{"start":{"line":11,"column":1},"end":{"line":11,"column":88}},"5":{"start":{"line":12,"column":1},"end":{"line":12,"column":96}},"6":{"start":{"line":14,"column":1},"end":{"line":36,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":35,"column":3}},"8":{"start":{"line":16,"column":3},"end":{"line":34,"column":4}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":28}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":71}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":73}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":69}},"13":{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},"14":{"start":{"line":28,"column":5},"end":{"line":28,"column":47}},"15":{"start":{"line":30,"column":4},"end":{"line":33,"column":5}},"16":{"start":{"line":32,"column":5},"end":{"line":32,"column":47}},"17":{"start":{"line":40,"column":1},"end":{"line":40,"column":38}},"18":{"start":{"line":43,"column":0},"end":{"line":43,"column":21}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":59},"end":{"line":11,"column":80}},{"start":{"line":11,"column":83},"end":{"line":11,"column":88}}]},"2":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":65},"end":{"line":12,"column":88}},{"start":{"line":12,"column":91},"end":{"line":12,"column":96}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"4":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":3},"end":{"line":16,"column":3}},{"start":{"line":16,"column":3},"end":{"line":16,"column":3}}]},"5":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":22},"end":{"line":20,"column":48}},{"start":{"line":20,"column":52},"end":{"line":20,"column":71}}]},"6":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":54},"end":{"line":22,"column":61}},{"start":{"line":22,"column":64},"end":{"line":22,"column":73}}]},"7":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"8":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":16}},{"start":{"line":27,"column":5},"end":{"line":27,"column":51}}]},"9":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"10":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":20}},{"start":{"line":31,"column":5},"end":{"line":31,"column":57}}]}},"code":["'use strict'","","","/**"," * @description runs tests according to config ( or all if strict is true )"," * @return {Function | undefined} undefined if just calling the method, function is linting over"," */","var lint = function() {","\tvar method = ''","\tvar checks = Object.getPrototypeOf( this ).lintMethods","\tvar maxErrs = typeof this.config.maxErrors === 'number' ? this.config.maxErrors : false","\tvar maxWarnings = typeof this.config.maxWarnings === 'number' ? this.config.maxWarnings : false","","\tfor ( method in checks ) {","\t\tif ( checks.hasOwnProperty( method ) ) {","\t\t\tif ( this.config[method] ) {","\t\t\t\t// save config rule name for use in reporters","\t\t\t\tthis.cache.rule = method","\t\t\t\t// state.conf === 'always' || 'never' || etc","\t\t\t\tthis.state.conf = this.config[method].expect || this.config[method]","\t\t\t\t// state.severity === 'error' || 'warning'","\t\t\t\tthis.state.severity = this.config[method].error ? 'Error' : 'Warning'","\t\t\t\t// run the actual check against the line","\t\t\t\tchecks[method].call( this, this.cache.line, this.cache.origLine )","\t\t\t\t// if check puts us over either limit, kill stylint","\t\t\t\tif ( maxErrs &&","\t\t\t\t\tthis.cache.errs.length > this.config.maxErrors ) {","\t\t\t\t\treturn this.reporter( '', 'done', 'kill' )","\t\t\t\t}","\t\t\t\tif ( maxWarnings &&","\t\t\t\t\tthis.cache.warnings.length > this.config.maxWarnings ) {","\t\t\t\t\treturn this.reporter( '', 'done', 'kill' )","\t\t\t\t}","\t\t\t}","\t\t}","\t}","","\t// save our curr context so we can use it next time","\t// this.cache.prevFile = this.cache.file","\tthis.cache.prevLine = this.cache.line","}","","module.exports = lint",""],"l":{"8":1,"9":0,"10":0,"11":0,"12":0,"14":0,"15":0,"16":0,"18":0,"20":0,"22":0,"24":0,"26":0,"28":0,"30":0,"32":0,"40":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/parse.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/parse.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":33}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":21},"end":{"line":17,"column":41}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":48},"end":{"line":24,"column":64}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":42}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":87}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"3":{"start":{"line":14,"column":0},"end":{"line":47,"column":1}},"4":{"start":{"line":15,"column":1},"end":{"line":15,"column":38}},"5":{"start":{"line":15,"column":14},"end":{"line":15,"column":37}},"6":{"start":{"line":17,"column":1},"end":{"line":46,"column":17}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":11}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":39}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":23}},"10":{"start":{"line":24,"column":2},"end":{"line":27,"column":19}},"11":{"start":{"line":26,"column":3},"end":{"line":26,"column":73}},"12":{"start":{"line":30,"column":2},"end":{"line":37,"column":18}},"13":{"start":{"line":31,"column":3},"end":{"line":31,"column":29}},"14":{"start":{"line":32,"column":3},"end":{"line":32,"column":42}},"15":{"start":{"line":33,"column":3},"end":{"line":33,"column":33}},"16":{"start":{"line":34,"column":3},"end":{"line":34,"column":23}},"17":{"start":{"line":35,"column":3},"end":{"line":35,"column":24}},"18":{"start":{"line":36,"column":3},"end":{"line":36,"column":31}},"19":{"start":{"line":40,"column":2},"end":{"line":40,"column":39}},"20":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"21":{"start":{"line":44,"column":3},"end":{"line":44,"column":37}},"22":{"start":{"line":49,"column":0},"end":{"line":49,"column":22}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},{"start":{"line":15,"column":1},"end":{"line":15,"column":1}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]}},"code":["'use strict'","","// strips out block comments and urls","var cleanFileRe = /(\\r\\n|\\n|\\r)|(^(\\/\\*)|([\\s'\"](\\/\\*)))(?!\\/)(.|[\\r\\n]|\\n)+?\\*\\/\\n?/gm","var lineEndingsRe = /\\r\\n|\\n|\\r/gm","","","/**"," * @description parses file for testing by removing extra new lines and block comments"," * @param {Object} [err] error obj from async if it exists"," * @param {Array} [res] array of files to parse"," * @returns {Function} test function"," */","var parse = function( err, res ) {","\tif ( err ) { throw new Error( err ) }","","\treturn res.forEach( function( file, i ) {","\t\tvar lines","\t\tthis.cache.file = this.cache.files[i]","\t\tthis.cache.fileNo = i","","\t\t// strip out block comments, but dont destroy line history","\t\t// to do these we replace block comments with new lines","\t\tlines = file.toString().replace( cleanFileRe, function( str ) {","\t\t\t// WHERE IS YOUR GOD NOW","\t\t\treturn ( new Array( str.split( lineEndingsRe ).length ) ).join( '\\n' )","\t\t} ).split( '\\n' )","","\t\t// updating cache as we go, and passing to the next step","\t\tlines.forEach( function( line, lineNo ) {","\t\t\tthis.cache.origLine = line","\t\t\tthis.cache.line = this.trimLine( line )","\t\t\tthis.cache.lineNo = lineNo + 1 // line nos don't start at 0","\t\t\tthis.cache.rule = ''","\t\t\tthis.cache.col = null","\t\t\treturn this.setState( line )","\t\t}.bind( this ) )","","\t\t// save previous file","\t\tthis.cache.prevFile = this.cache.file","","\t\t// if on the last file, call the done function to output success or error msg","\t\tif ( this.cache.fileNo === res.length - 1 ) {","\t\t\treturn this.reporter( '', 'done' )","\t\t}","\t}.bind( this ) )","}","","module.exports = parse",""],"l":{"4":1,"5":1,"14":1,"15":0,"17":0,"18":0,"19":0,"20":0,"24":0,"26":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"40":0,"43":0,"44":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/read.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/read.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":32}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":23},"end":{"line":30,"column":46}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":19},"end":{"line":36,"column":36}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":35},"end":{"line":37,"column":55}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"3":{"start":{"line":12,"column":0},"end":{"line":58,"column":1}},"4":{"start":{"line":15,"column":1},"end":{"line":15,"column":39}},"5":{"start":{"line":19,"column":1},"end":{"line":21,"column":2}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":56}},"7":{"start":{"line":24,"column":1},"end":{"line":26,"column":2}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":41}},"9":{"start":{"line":30,"column":1},"end":{"line":57,"column":17}},"10":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":32,"column":3},"end":{"line":32,"column":62}},"12":{"start":{"line":36,"column":2},"end":{"line":42,"column":16}},"13":{"start":{"line":37,"column":3},"end":{"line":41,"column":6}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":51}},"15":{"start":{"line":38,"column":39},"end":{"line":38,"column":51}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":50}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":37}},"18":{"start":{"line":45,"column":2},"end":{"line":45,"column":34}},"19":{"start":{"line":45,"column":28},"end":{"line":45,"column":34}},"20":{"start":{"line":47,"column":2},"end":{"line":53,"column":3}},"21":{"start":{"line":48,"column":3},"end":{"line":48,"column":26}},"22":{"start":{"line":49,"column":3},"end":{"line":49,"column":24}},"23":{"start":{"line":50,"column":3},"end":{"line":50,"column":25}},"24":{"start":{"line":51,"column":3},"end":{"line":51,"column":28}},"25":{"start":{"line":52,"column":3},"end":{"line":52,"column":77}},"26":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"27":{"start":{"line":55,"column":3},"end":{"line":55,"column":46}},"28":{"start":{"line":60,"column":0},"end":{"line":60,"column":21}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":12},"end":{"line":15,"column":20}},{"start":{"line":15,"column":24},"end":{"line":15,"column":39}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":7},"end":{"line":31,"column":13}},{"start":{"line":31,"column":17},"end":{"line":31,"column":20}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]}},"code":["'use strict'","","var fs = require( 'fs' )","var async = require( 'async' )","","","/**"," * @description determines what files to read, creates an array of them, and passes it to be parsed"," * @param {string} [filepath] [option for manually passing in a filename]"," * @returns {Function} parse function"," */","var read = function( filepath ) {","\t// if user passes in a glob, we forEach over them","\t// and pass it into read() as filepath","\tvar path = filepath || this.state.path","","\t// if nothing passed in, default to linting the curr dir","\t// here we get all the files to parse first, then we pass to app.parse","\tif ( path === process.cwd() ) {","\t\treturn this.getFiles( this.state.path + '/**/*.styl' )","\t}","","\t// if * is array, assume glob","\tif ( path instanceof Array ) {","\t\treturn this.getFiles( this.state.path )","\t}","","\t// else we'll have either a filename or dir name to work with","\t// if dir we use the glob logic to return an array of files to test","\treturn fs.stat( path, function( err, stats ) {","\t\tif ( !stats || err ) {","\t\t\tthrow Error( 'Stylint Error: No such file or dir exists!' )","\t\t}","","\t\t// if this path matches any regex in the excludes array, we ignore","\t\tvar isExcludes = function( path ) {","\t\t\treturn this.state.exclude.some( function( exclude ) {","\t\t\t\tif ( typeof exclude !== 'string' ) return false","\t\t\t\tvar excludeRegExp = new RegExp( exclude, 'm' )","\t\t\t\treturn excludeRegExp.test( path )","\t\t\t} )","\t\t}.bind( this )","","\t\t// you shall not pass","\t\tif ( isExcludes( path ) ) return","","\t\tif ( stats.isFile() ) {","\t\t\tthis.cache.filesLen = 1","\t\t\tthis.cache.fileNo = 1","\t\t\tthis.cache.file = path","\t\t\tthis.cache.files = [path]","\t\t\treturn async.map( this.cache.files, fs.readFile, this.parse.bind( this ) )","\t\t}","\t\tif ( stats.isDirectory() ) {","\t\t\treturn this.getFiles( path + '/**/*.styl' )","\t\t}","\t}.bind( this ) )","}","","module.exports = read",""],"l":{"3":1,"4":1,"12":1,"15":0,"19":0,"20":0,"24":0,"25":0,"30":0,"31":0,"32":0,"36":0,"37":0,"38":0,"39":0,"40":0,"45":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/reporter.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/reporter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":13,"column":0},"end":{"line":66,"column":1}},"3":{"start":{"line":14,"column":1},"end":{"line":32,"column":2}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":68}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":95}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":77}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":101}},"8":{"start":{"line":23,"column":2},"end":{"line":29,"column":3}},"9":{"start":{"line":24,"column":3},"end":{"line":24,"column":62}},"10":{"start":{"line":26,"column":7},"end":{"line":29,"column":3}},"11":{"start":{"line":28,"column":3},"end":{"line":28,"column":22}},"12":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}},"13":{"start":{"line":34,"column":1},"end":{"line":34,"column":46}},"14":{"start":{"line":35,"column":1},"end":{"line":35,"column":91}},"15":{"start":{"line":37,"column":1},"end":{"line":37,"column":49}},"16":{"start":{"line":38,"column":1},"end":{"line":40,"column":23}},"17":{"start":{"line":42,"column":1},"end":{"line":42,"column":41}},"18":{"start":{"line":45,"column":1},"end":{"line":45,"column":95}},"19":{"start":{"line":48,"column":1},"end":{"line":50,"column":2}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":115}},"21":{"start":{"line":53,"column":1},"end":{"line":53,"column":48}},"22":{"start":{"line":54,"column":1},"end":{"line":60,"column":2}},"23":{"start":{"line":62,"column":1},"end":{"line":62,"column":24}},"24":{"start":{"line":63,"column":1},"end":{"line":63,"column":39}},"25":{"start":{"line":65,"column":1},"end":{"line":65,"column":22}},"26":{"start":{"line":68,"column":0},"end":{"line":68,"column":25}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":90}},{"start":{"line":17,"column":93},"end":{"line":17,"column":95}}]},"3":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":96}},{"start":{"line":20,"column":99},"end":{"line":20,"column":101}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":7},"end":{"line":26,"column":7}},{"start":{"line":26,"column":7},"end":{"line":26,"column":7}}]},"6":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":40}},{"start":{"line":27,"column":3},"end":{"line":27,"column":35}}]},"7":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":70},"end":{"line":35,"column":84}},{"start":{"line":35,"column":87},"end":{"line":35,"column":91}}]},"8":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":11},"end":{"line":35,"column":45}},{"start":{"line":35,"column":49},"end":{"line":35,"column":67}}]},"9":{"line":38,"type":"cond-expr","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},{"start":{"line":40,"column":2},"end":{"line":40,"column":23}}]},"10":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},{"start":{"line":48,"column":1},"end":{"line":48,"column":1}}]},"11":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":40}},{"start":{"line":48,"column":44},"end":{"line":48,"column":63}}]},"12":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":18},"end":{"line":56,"column":29}},{"start":{"line":56,"column":32},"end":{"line":56,"column":49}}]}},"code":["'use strict'","","var chalk = require( 'chalk' )","","","/**"," * @description format output message for console (default)"," * @param  {string} msg  error msg from one of the checks"," * @param  {string} done whether or not this is the last message to output"," * @param  {string} kill whether or not we're over one of our limits"," * @return {string | Function} either the formatted msg or done()"," */","var reporter = function( msg, done, kill ) {","\tif ( done === 'done' ) {","\t\t// total errors","\t\tthis.cache.msg = 'Stylint: ' + this.cache.errs.length + ' Errors.'","\t\tthis.cache.msg += this.config.maxErrors ? ' (Max Errors: ' + this.config.maxErrors + ')' : ''","\t\t// total warnings","\t\tthis.cache.msg += '\\nStylint: ' + this.cache.warnings.length + ' Warnings.'","\t\tthis.cache.msg += this.config.maxWarnings ? ' (Max Warnings: ' + this.config.maxWarnings + ')' : ''","","\t\t// if you set a max it kills the linter","\t\tif ( kill === 'kill' ) {","\t\t\tthis.cache.msg += '\\nStylint: Over Error or Warning Limit.'","\t\t}","\t\telse if ( this.cache.errs.length === 0 &&","\t\t\tthis.cache.warnings.length === 0 ) {","\t\t\tthis.cache.msg = ''","\t\t}","","\t\treturn this.done()","\t}","","\tvar file = chalk.underline( this.cache.file )","\tvar col = typeof this.cache.col === 'number' && this.cache.col > 0 ? this.cache.col : null","","\tvar severity = this.state.severity.toLowerCase()","\tseverity = severity === 'warning' ?","\t\tchalk.yellow( severity ) :","\t\tchalk.red( severity )","","\tvar rule = chalk.grey( this.cache.rule )","","\t// normal error or warning messages","\tvar defaultMessage = file + '\\n' + this.cache.lineNo + ' ' + rule + ' ' + severity + ' ' + msg","","\t// if column data available, output slightly different line","\tif ( typeof this.cache.col === 'number' && this.cache.col > -1 ) {","\t\tdefaultMessage = file + '\\n' + this.cache.lineNo + ':' + this.cache.col + ' ' + rule + ' ' + severity + ' ' + msg","\t}","","\t// weird syntax highlighting issue when this is inside a ternary","\tvar linePlusCol = this.cache.lineNo + ':' + col","\tvar messageObj = {","\t\tfile: file,","\t\tlineData: col ? linePlusCol : this.cache.lineNo,","\t\tseverity: severity,","\t\tdescription: msg,","\t\trule: rule","\t}","","\tmessageObj[file] = true","\tthis.cache.messages.push( messageObj )","","\treturn defaultMessage","}","","module.exports = reporter",""],"l":{"3":1,"13":1,"14":0,"16":0,"17":0,"19":0,"20":0,"23":0,"24":0,"26":0,"28":0,"31":0,"34":0,"35":0,"37":0,"38":0,"42":0,"45":0,"48":0,"49":0,"53":0,"54":0,"62":0,"63":0,"65":0,"68":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/setState.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/setState.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":32}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":22}},"2":{"start":{"line":13,"column":0},"end":{"line":66,"column":1}},"3":{"start":{"line":14,"column":1},"end":{"line":14,"column":56}},"4":{"start":{"line":17,"column":1},"end":{"line":19,"column":2}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":8}},"6":{"start":{"line":22,"column":1},"end":{"line":25,"column":2}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":8}},"8":{"start":{"line":28,"column":1},"end":{"line":31,"column":2}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":8}},"10":{"start":{"line":34,"column":1},"end":{"line":37,"column":2}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":8}},"12":{"start":{"line":41,"column":1},"end":{"line":44,"column":2}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":8}},"14":{"start":{"line":47,"column":1},"end":{"line":54,"column":2}},"15":{"start":{"line":48,"column":2},"end":{"line":52,"column":3}},"16":{"start":{"line":49,"column":3},"end":{"line":49,"column":80}},"17":{"start":{"line":50,"column":3},"end":{"line":50,"column":77}},"18":{"start":{"line":51,"column":3},"end":{"line":51,"column":83}},"19":{"start":{"line":53,"column":2},"end":{"line":53,"column":8}},"20":{"start":{"line":57,"column":1},"end":{"line":60,"column":2}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":32}},"22":{"start":{"line":59,"column":2},"end":{"line":59,"column":8}},"23":{"start":{"line":63,"column":1},"end":{"line":65,"column":2}},"24":{"start":{"line":64,"column":2},"end":{"line":64,"column":20}},"25":{"start":{"line":68,"column":0},"end":{"line":68,"column":25}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},{"start":{"line":22,"column":1},"end":{"line":22,"column":1}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":43}},{"start":{"line":23,"column":2},"end":{"line":23,"column":50}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},{"start":{"line":28,"column":1},"end":{"line":28,"column":1}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":33}},{"start":{"line":29,"column":2},"end":{"line":29,"column":37}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},{"start":{"line":34,"column":1},"end":{"line":34,"column":1}}]},"7":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":33}},{"start":{"line":35,"column":2},"end":{"line":35,"column":37}}]},"8":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},{"start":{"line":41,"column":1},"end":{"line":41,"column":1}}]},"9":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":28}},{"start":{"line":42,"column":2},"end":{"line":42,"column":32}}]},"10":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},{"start":{"line":47,"column":1},"end":{"line":47,"column":1}}]},"11":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"12":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":21},"end":{"line":49,"column":52}},{"start":{"line":49,"column":56},"end":{"line":49,"column":80}}]},"13":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":58},"end":{"line":50,"column":65}},{"start":{"line":50,"column":68},"end":{"line":50,"column":77}}]},"14":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},{"start":{"line":57,"column":1},"end":{"line":57,"column":1}}]},"15":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":1},"end":{"line":63,"column":1}},{"start":{"line":63,"column":1},"end":{"line":63,"column":1}}]}},"code":["'use strict'","","// super simple.","// if theres anything on the line besides whitespace, it aint empty","var emptyLineRe = /\\S/","","","/**"," * @description sets values like context, determine whether we even run tests, etc"," * @param {string} [line] curr line being linted"," * @returns {Function | undefined} undefined if we catch something, else lint()"," */","var setState = function( line ) {","\tthis.state.context = this.setContext( this.cache.line )","","\t// ignore the current line if @stylint ignore","\tif ( this.cache.origLine.indexOf( '@stylint ignore' ) !== -1 ) {","\t\treturn","\t}","","\t// if @stylint on / off commands found in the code","\tif ( this.stylintOn( this.cache.origLine ) ||","\t\tthis.stylintOff( this.cache.origLine ) === false ) {","\t\treturn","\t}","","\t// if hash starting / ending, set state and return early","\tif ( this.hashOrCSSStart( line ) ||","\t\tthis.hashOrCSSEnd( line ) === false ) {","\t\treturn","\t}","","\t// if starting / ending keyframes","\tif ( this.keyframesStart( line ) ||","\t\tthis.keyframesEnd( line ) === false ) {","\t\treturn","\t}","","\t// if starting / ending css4 :root","\t// we'll need to capture custom properties","\tif ( this.rootStart( line ) ||","\t\tthis.rootEnd( line ) === false ) {","\t\treturn","\t}","","\t// if entire line is comment, just check comment spacing and that's it","\tif ( this.startsWithComment( line ) ) {","\t\tif ( typeof this.config.commentSpace !== 'undefined' ) {","\t\t\tthis.state.conf = this.config.commentSpace.expect || this.config.commentSpace","\t\t\tthis.state.severity = this.config.commentSpace.error ? 'Error' : 'Warning'","\t\t\tthis.lintMethods.commentSpace.call( this, this.cache.line, this.cache.origLine )","\t\t}","\t\treturn","\t}","","\t// if empty line","\tif ( emptyLineRe.test( line ) === false ) {","\t\tthis.cache.sortOrderCache = []","\t\treturn","\t}","","\t// actually run tests if we made it this far","\tif ( this.state.testsEnabled === true ) {","\t\treturn this.lint()","\t}","}","","module.exports = setState",""],"l":{"5":1,"13":1,"14":0,"17":0,"18":0,"22":0,"24":0,"28":0,"30":0,"34":0,"36":0,"41":0,"43":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"57":0,"58":0,"59":0,"63":0,"64":0,"68":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/state.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/state.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":22,"column":1}},"2":{"start":{"line":24,"column":0},"end":{"line":24,"column":22}}},"branchMap":{},"code":["/**"," * @description i hold the state"," * @return {Object} [i expose properties to the entire app]"," */","var state = {","\tconf: false, // config for currently running check ('always' || 'never' || etc)","\tcontext: 0, // what is our level of nesting?","\texclude: [], // what files should be excluded","\texitCode: 0, // err or no err","\thasComment: false, // checks for // in a line","\thashOrCSS: false, // are we in a hash","\tkeyframes: false, // are we in @keyframes","\tkillSwitch: false, // are we over our warning limit","\topenBracket: false, // is there an unclosed bracket","\tpath: '', // curr dir || file","\tprevContext: 0, // save the last context as well","\troot: false, // css4 root block, for declaring css4 variables","\tseverity: 'warning', // severity level for current check","\ttestsEnabled: true, // are we running linter tests","\tquiet: false, // turn off console logs","\twatching: false // are we watching","}","","module.exports = state",""],"l":{"5":1,"24":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/watch.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/core/watch.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":23}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":9,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":10,"column":1},"end":{"line":10,"column":49}},"4":{"start":{"line":13,"column":1},"end":{"line":16,"column":17}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":28}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":70}},"7":{"start":{"line":19,"column":1},"end":{"line":19,"column":61}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":22}}},"branchMap":{},"code":["'use strict'","","var chokidar = require( 'chokidar' )","","/**"," * @description kicks off the app. sets up config and kicks off reading the files"," * @return {Function} kick off linter on each change"," */","var watch = function() {","\tthis.watcher = chokidar.watch( this.state.path )","","\t// initial watch msg","\tthis.watcher.on( 'ready', function() {","\t\tthis.state.watching = true","\t\treturn console.log( 'Watching: ', this.state.path, ' for changes.' )","\t}.bind( this ) )","","\t// listen for changes, update 'dir' to curr file, wipe all the caches, do somethin","\tthis.watcher.on( 'change', this.resetOnChange.bind( this ) )","}","","module.exports = watch",""],"l":{"3":1,"9":1,"10":0,"13":0,"14":0,"15":0,"19":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/hashOrCSSEnd.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/hashOrCSSEnd.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":14},"end":{"line":9,"column":31}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":19,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":10,"column":40}},"3":{"start":{"line":10,"column":32},"end":{"line":10,"column":39}},"4":{"start":{"line":13,"column":1},"end":{"line":16,"column":2}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":30}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":32}},"7":{"start":{"line":18,"column":1},"end":{"line":18,"column":28}},"8":{"start":{"line":21,"column":0},"end":{"line":21,"column":24}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]}},"code":["'use strict'","","","/**"," * @description check for end ofhash or @css block"," * @param {string} [line] curr line being linted"," * @returns {boolean} false if hash or css ending, true if not"," */","var hashEnd = function( line ) {","\tif ( !this.state.hashOrCSS ) { return }","","\t// ex }, but only if we've already establish that we're in a hash'","\tif ( line.indexOf( '}' ) !== -1 ) {","\t\tthis.state.hashOrCSS = false","\t\tthis.state.testsEnabled = true","\t}","","\treturn this.state.hashOrCSS","}","","module.exports = hashEnd",""],"l":{"9":1,"10":0,"13":0,"14":0,"15":0,"18":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/hashOrCSSStart.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/hashOrCSSStart.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"3":{"start":{"line":12,"column":0},"end":{"line":30,"column":1}},"4":{"start":{"line":13,"column":1},"end":{"line":13,"column":67}},"5":{"start":{"line":13,"column":59},"end":{"line":13,"column":66}},"6":{"start":{"line":14,"column":1},"end":{"line":14,"column":53}},"7":{"start":{"line":17,"column":1},"end":{"line":21,"column":2}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":29}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":33}},"10":{"start":{"line":24,"column":1},"end":{"line":27,"column":2}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":30}},"12":{"start":{"line":26,"column":2},"end":{"line":26,"column":32}},"13":{"start":{"line":29,"column":1},"end":{"line":29,"column":28}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":26}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":26}},{"start":{"line":13,"column":30},"end":{"line":13,"column":54}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]},"4":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":29}},{"start":{"line":17,"column":33},"end":{"line":17,"column":62}},{"start":{"line":18,"column":2},"end":{"line":18,"column":34}},{"start":{"line":18,"column":38},"end":{"line":18,"column":72}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]},"6":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":26}},{"start":{"line":24,"column":30},"end":{"line":24,"column":56}}]}},"code":["'use strict'","","var hashStartRe = /{$|{ $|(= {)/","var stripMixinsRe = /(\\(.*\\))/","","","/**"," * @description check for start of hash or @css block"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if hash or @css starting, false if not"," */","var hashStart = function( line ) {","\tif ( this.state.hashOrCSS || !this.state.testsEnabled ) { return }","\tvar strippedLine = line.replace( stripMixinsRe, '' )","","\t// ex $colorsHash = { or @css {","\tif ( !this.config.cssLiteral && line.indexOf( '@css' ) !== -1 ||","\t\thashStartRe.test( strippedLine ) && strippedLine.indexOf( '=' ) !== -1 ) {","\t\tthis.state.hashOrCSS = true","\t\tthis.state.testsEnabled = false","\t}","","\t// for hash one liners (ex: $hash = { foo: 'bar' } )","\tif ( this.state.hashOrCSS && line.indexOf( '}' ) !== -1 ) {","\t\tthis.state.hashOrCSS = false","\t\tthis.state.testsEnabled = true","\t}","","\treturn this.state.hashOrCSS","}","","module.exports = hashStart",""],"l":{"3":1,"4":1,"12":1,"13":0,"14":0,"17":0,"19":0,"20":0,"24":0,"25":0,"26":0,"29":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/keyframesEnd.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/keyframesEnd.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":19},"end":{"line":8,"column":30}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":40}},"3":{"start":{"line":9,"column":32},"end":{"line":9,"column":39}},"4":{"start":{"line":11,"column":1},"end":{"line":13,"column":2}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":30}},"6":{"start":{"line":15,"column":1},"end":{"line":15,"column":28}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},{"start":{"line":9,"column":1},"end":{"line":9,"column":1}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},{"start":{"line":11,"column":1},"end":{"line":11,"column":1}}]},"3":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":26}},{"start":{"line":11,"column":30},"end":{"line":11,"column":54}}]}},"code":["'use strict'","","","/**"," * @description check for keyframes end"," * @returns {boolean} false if keyframes ending, true if not"," */","var keyframesEnd = function() {","\tif ( !this.state.keyframes ) { return }","","\tif ( this.state.keyframes && this.state.context === 0 ) {","\t\tthis.state.keyframes = false","\t}","","\treturn this.state.keyframes","}","","module.exports = keyframesEnd",""],"l":{"8":1,"9":0,"11":0,"12":0,"15":0,"18":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/keyframesStart.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/keyframesStart.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":21},"end":{"line":10,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":10,"column":0},"end":{"line":18,"column":1}},"3":{"start":{"line":11,"column":1},"end":{"line":11,"column":67}},"4":{"start":{"line":11,"column":59},"end":{"line":11,"column":66}},"5":{"start":{"line":13,"column":1},"end":{"line":15,"column":2}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}},"7":{"start":{"line":17,"column":1},"end":{"line":17,"column":28}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},{"start":{"line":11,"column":1},"end":{"line":11,"column":1}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":26}},{"start":{"line":11,"column":30},"end":{"line":11,"column":54}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]}},"code":["'use strict'","","var keyframeRe = /@(?:-(?:[\\w\\d]+-)*)?keyframes/","","/**"," * @description check for keyframes, which have some special rules"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if keyframes starting, false if not"," */","var keyframesStart = function( line ) {","\tif ( this.state.keyframes || !this.state.testsEnabled ) { return }","","\tif ( keyframeRe.test( line ) ) {","\t\tthis.state.keyframes = true","\t}","","\treturn this.state.keyframes","}","","module.exports = keyframesStart",""],"l":{"3":1,"10":1,"11":0,"13":0,"14":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/rootEnd.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/rootEnd.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":14},"end":{"line":8,"column":25}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":35}},"3":{"start":{"line":9,"column":27},"end":{"line":9,"column":34}},"4":{"start":{"line":11,"column":1},"end":{"line":13,"column":2}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"6":{"start":{"line":15,"column":1},"end":{"line":15,"column":23}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},{"start":{"line":9,"column":1},"end":{"line":9,"column":1}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},{"start":{"line":11,"column":1},"end":{"line":11,"column":1}}]},"3":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":21}},{"start":{"line":11,"column":25},"end":{"line":11,"column":49}}]}},"code":["'use strict'","","","/**"," * @description check for keyframes end"," * @returns {boolean} false if keyframes ending, true if not"," */","var rootEnd = function() {","\tif ( !this.state.root ) { return }","","\tif ( this.state.root && this.state.context === 0 ) {","\t\tthis.state.root = false","\t}","","\treturn this.state.root","}","","module.exports = rootEnd",""],"l":{"8":1,"9":0,"11":0,"12":0,"15":0,"18":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/rootStart.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/rootStart.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":33}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":62}},"3":{"start":{"line":9,"column":54},"end":{"line":9,"column":61}},"4":{"start":{"line":11,"column":1},"end":{"line":13,"column":2}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":24}},"6":{"start":{"line":15,"column":1},"end":{"line":15,"column":23}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},{"start":{"line":9,"column":1},"end":{"line":9,"column":1}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":6},"end":{"line":9,"column":21}},{"start":{"line":9,"column":25},"end":{"line":9,"column":49}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},{"start":{"line":11,"column":1},"end":{"line":11,"column":1}}]}},"code":["'use strict'","","/**"," * @description check for keyframes, which have some special rules"," * @param {string} [line] curr line being linted"," * @returns {boolean} true if keyframes starting, false if not"," */","var rootStart = function( line ) {","\tif ( this.state.root || !this.state.testsEnabled ) { return }","","\tif ( line.indexOf( ':root' ) !== -1 ) {","\t\tthis.state.root = true","\t}","","\treturn this.state.root","}","","module.exports = rootStart",""],"l":{"8":1,"9":0,"11":0,"12":0,"15":0,"18":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/startsWithComment.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/startsWithComment.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":10,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":11,"column":1},"end":{"line":11,"column":19}},"4":{"start":{"line":14,"column":1},"end":{"line":17,"column":2}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":15}},"6":{"start":{"line":19,"column":1},"end":{"line":19,"column":14}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":33}},{"start":{"line":15,"column":2},"end":{"line":15,"column":31}}]}},"code":["'use strict'","","var commentRe = /(^\\/\\/)/","","/**"," * @description check if line starts with comment"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if comment found, false if not"," */","var startsWithComment = function( line ) {","\tvar starts = false","","\t// ex }, but only if we've already establish that we're not in a hash","\tif ( line.indexOf( '//' ) !== -1 &&","\t\tcommentRe.test( line.trim() ) ) {","\t\tstarts = true","\t}","","\treturn starts","}","","module.exports = startsWithComment",""],"l":{"3":1,"10":1,"11":0,"14":0,"16":0,"19":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/stylintOff.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/stylintOff.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":34}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":10,"column":43}},"3":{"start":{"line":10,"column":35},"end":{"line":10,"column":42}},"4":{"start":{"line":13,"column":1},"end":{"line":15,"column":2}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":33}},"6":{"start":{"line":17,"column":1},"end":{"line":17,"column":31}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]}},"code":["'use strict'","","","/**"," * @description toggle stylint off"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if stylint on, false if not"," */","var stylintOff = function( line ) {","\tif ( !this.state.testsEnabled ) { return }","","\t// ex: $hash = { is ok but .class = { is not","\tif ( line.indexOf( '@stylint off' ) !== -1 ) {","\t\tthis.state.testsEnabled = false","\t}","","\treturn this.state.testsEnabled","}","","module.exports = stylintOff",""],"l":{"9":1,"10":0,"13":0,"14":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/stylintOn.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/state/stylintOn.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":33}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":10,"column":42}},"3":{"start":{"line":10,"column":34},"end":{"line":10,"column":41}},"4":{"start":{"line":13,"column":1},"end":{"line":15,"column":2}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":32}},"6":{"start":{"line":17,"column":1},"end":{"line":17,"column":31}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]}},"code":["'use strict'","","","/**"," * @description toggle stylint back on"," * @param  {string} [line] curr line being linted"," * @return {boolean} true if stylint on, false if not"," */","var stylintOn = function( line ) {","\tif ( this.state.testsEnabled ) { return }","","\t// ex: $hash = { is ok but .class = { is not","\tif ( line.indexOf( '@stylint on' ) !== -1 ) {","\t\tthis.state.testsEnabled = true","\t}","","\treturn this.state.testsEnabled","}","","module.exports = stylintOn",""],"l":{"9":1,"10":0,"13":0,"14":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/checkPrefix.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/checkPrefix.js","s":{"1":1,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":18},"end":{"line":10,"column":47}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":29},"end":{"line":11,"column":48}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":11,"column":1},"end":{"line":13,"column":4}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":30}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}}},"branchMap":{},"code":["'use strict'","","/**"," * @description used in conjunction with the valid check (for valid css)"," * @param {string} [prop] the property to prepend prefixes to"," * @param {string} [css] the css key we're checking against (from valid.json)"," * @param {Object} [valid] the valid.json object"," * @returns {boolean} true if at least one match found, false if not","*/","var checkPrefix = function( prop, css, valid ) {","\treturn valid.prefixes.some( function( prefix ) {","\t\treturn prop === prefix + css","\t} )","}","","module.exports = checkPrefix",""],"l":{"10":1,"11":0,"12":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/checkPseudo.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/checkPseudo.js","s":{"1":1,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":18},"end":{"line":10,"column":48}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":27},"end":{"line":11,"column":46}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":11,"column":1},"end":{"line":13,"column":4}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":31}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}}},"branchMap":{},"code":["'use strict'","","/**"," * @description used in conjunction with the valid check (for valid html)"," * @param {string} [prop] the property to prepend prefixes to"," * @param {string} [html] the html we're checking against (from valid.json)"," * @param {Object} [valid] the valid.json object"," * @returns {boolean} true if at least one match found, false if not","*/","var checkPseudo = function( prop, html, valid ) {","\treturn valid.pseudo.some( function( pseudo ) {","\t\treturn prop === html + pseudo","\t} )","}","","module.exports = checkPseudo",""],"l":{"10":1,"11":0,"12":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/getFiles.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/getFiles.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":31}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":24},"end":{"line":19,"column":47}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":25},"end":{"line":22,"column":42}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":33},"end":{"line":26,"column":53}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":26},"end":{"line":41,"column":47}}},"6":{"name":"(anonymous_6)","line":44,"loc":{"start":{"line":44,"column":32},"end":{"line":44,"column":52}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":35},"end":{"line":53,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"5":{"start":{"line":13,"column":0},"end":{"line":57,"column":1}},"6":{"start":{"line":14,"column":1},"end":{"line":16,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":94}},"8":{"start":{"line":18,"column":1},"end":{"line":56,"column":2}},"9":{"start":{"line":19,"column":2},"end":{"line":37,"column":18}},"10":{"start":{"line":20,"column":3},"end":{"line":20,"column":27}},"11":{"start":{"line":20,"column":16},"end":{"line":20,"column":26}},"12":{"start":{"line":22,"column":3},"end":{"line":31,"column":12}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":24}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":72}},"15":{"start":{"line":26,"column":4},"end":{"line":28,"column":7}},"16":{"start":{"line":27,"column":5},"end":{"line":27,"column":52}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":20}},"18":{"start":{"line":33,"column":3},"end":{"line":33,"column":41}},"19":{"start":{"line":34,"column":3},"end":{"line":34,"column":27}},"20":{"start":{"line":36,"column":3},"end":{"line":36,"column":77}},"21":{"start":{"line":39,"column":6},"end":{"line":56,"column":2}},"22":{"start":{"line":41,"column":2},"end":{"line":49,"column":11}},"23":{"start":{"line":42,"column":3},"end":{"line":42,"column":23}},"24":{"start":{"line":44,"column":3},"end":{"line":46,"column":6}},"25":{"start":{"line":45,"column":4},"end":{"line":45,"column":52}},"26":{"start":{"line":48,"column":3},"end":{"line":48,"column":19}},"27":{"start":{"line":51,"column":2},"end":{"line":51,"column":40}},"28":{"start":{"line":52,"column":2},"end":{"line":52,"column":26}},"29":{"start":{"line":53,"column":2},"end":{"line":55,"column":18}},"30":{"start":{"line":54,"column":3},"end":{"line":54,"column":27}},"31":{"start":{"line":59,"column":0},"end":{"line":59,"column":25}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":29}},{"start":{"line":14,"column":33},"end":{"line":14,"column":58}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},{"start":{"line":18,"column":1},"end":{"line":18,"column":1}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":3},"end":{"line":20,"column":3}},{"start":{"line":20,"column":3},"end":{"line":20,"column":3}}]},"5":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":24}},{"start":{"line":27,"column":28},"end":{"line":27,"column":52}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":15},"end":{"line":45,"column":23}},{"start":{"line":45,"column":27},"end":{"line":45,"column":52}}]}},"code":["'use strict'","","var fs = require( 'fs' )","var glob = require( 'glob' )","var async = require( 'async' )","var path = require( 'path' )","","/**"," * @description globs files and returns an array, used in various methods"," * @param {string} [dir] directory of files to glob"," * @returns {Array} returns an array of files","*/","var getFiles = function( dir ) {","\tif ( typeof dir !== 'string' && !( dir instanceof Array ) ) {","\t\tthrow new TypeError( 'getFiles err. Expected string or array, but received: ' + typeof dir )","\t}","","\tif ( typeof dir === 'string' ) {","\t\treturn glob( dir, {}, function( err, files ) {","\t\t\tif ( err ) { throw err }","","\t\t\tfiles = files.filter( function( file ) {","\t\t\t\tvar excluded = false","\t\t\t\tvar relPath = path.relative( dir.replace( '/**/*.styl', '' ), file )","","\t\t\t\tthis.config.exclude.forEach( function( exclude ) {","\t\t\t\t\texcluded = excluded || exclude.match( relPath )","\t\t\t\t} )","","\t\t\t\treturn !excluded","\t\t\t}, this )","","\t\t\tthis.cache.filesLen = files.length - 1","\t\t\tthis.cache.files = files","","\t\t\treturn async.map( this.cache.files, fs.readFile, this.parse.bind( this ) )","\t\t}.bind( this ) )","\t}","\telse if ( dir instanceof Array ) {","","\t\tvar files = dir.filter( function( filepath ) {","\t\t\tvar excluded = false","","\t\t\tthis.config.exclude.forEach( function( exclude ) {","\t\t\t\texcluded = excluded || exclude.match( filepath )","\t\t\t} )","","\t\t\treturn !excluded","\t\t}, this )","","\t\tthis.cache.filesLen = files.length - 1","\t\tthis.cache.files = files","\t\treturn this.cache.files.forEach( function( file ) {","\t\t\treturn this.read( file )","\t\t}.bind( this ) )","\t}","}","","module.exports = getFiles",""],"l":{"3":1,"4":1,"5":1,"6":1,"13":1,"14":0,"15":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"26":0,"27":0,"30":0,"33":0,"34":0,"36":0,"39":0,"41":0,"42":0,"44":0,"45":0,"48":0,"51":0,"52":0,"53":0,"54":0,"59":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/msg.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/msg.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":10},"end":{"line":10,"column":34}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":12,"column":1},"end":{"line":12,"column":84}},"3":{"start":{"line":13,"column":1},"end":{"line":13,"column":24}},"4":{"start":{"line":16,"column":1},"end":{"line":16,"column":40}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":20}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":47},"end":{"line":12,"column":66}},{"start":{"line":12,"column":69},"end":{"line":12,"column":84}}]}},"code":["'use strict'","","","/**"," * @description basically just sets the severity and routes output to the reporter"," * @param {string} [str] outputted string from one of the checks"," * @param {number} [column] column number if applicable to the check"," * @returns {Function} push formatted output to appropriate array","*/","var msg = function( str, column ) {","\t// determine which group the msg belongs to","\tvar arr = this.state.severity === 'Warning' ? this.cache.warnings : this.cache.errs","\tthis.cache.col = column","","\t// push the final output","\treturn arr.push( this.reporter( str ) )","}","","module.exports = msg",""],"l":{"10":1,"12":0,"13":0,"16":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/resetOnChange.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/resetOnChange.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":20},"end":{"line":8,"column":40}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":24,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":54}},"3":{"start":{"line":10,"column":1},"end":{"line":10,"column":21}},"4":{"start":{"line":11,"column":1},"end":{"line":11,"column":25}},"5":{"start":{"line":12,"column":1},"end":{"line":12,"column":27}},"6":{"start":{"line":13,"column":1},"end":{"line":13,"column":26}},"7":{"start":{"line":14,"column":1},"end":{"line":14,"column":23}},"8":{"start":{"line":15,"column":1},"end":{"line":15,"column":25}},"9":{"start":{"line":16,"column":1},"end":{"line":16,"column":25}},"10":{"start":{"line":17,"column":1},"end":{"line":17,"column":27}},"11":{"start":{"line":18,"column":1},"end":{"line":18,"column":23}},"12":{"start":{"line":19,"column":1},"end":{"line":19,"column":31}},"13":{"start":{"line":21,"column":1},"end":{"line":23,"column":2}},"14":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}}},"branchMap":{"1":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":29},"end":{"line":9,"column":36}},{"start":{"line":9,"column":39},"end":{"line":9,"column":54}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]}},"code":["'use strict'","","/**"," * @description brittle function that just resets a bunch of caches when watch is running"," * @param {string} [newPath] if touching a new file, lint it"," * @returns {Function} kick off linter again","*/","var resetOnChange = function( newPath ) {","\tthis.state.path = newPath ? newPath : this.state.path","\tthis.cache.errs = []","\tthis.cache.warnings = []","\tthis.cache.alphaCache = []","\tthis.cache.rootCache = []","\tthis.cache.zCache = []","\tthis.cache.prevLine = ''","\tthis.cache.prevFile = ''","\tthis.cache.prevContext = 0","\tthis.cache.sCache = {}","\tthis.cache.sortOrderCache = []","","\tif ( this.state.watching ) {","\t\treturn this.read()","\t}","}","","module.exports = resetOnChange",""],"l":{"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"21":0,"22":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/setConfig.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/setConfig.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":39}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":37}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":27},"end":{"line":59,"column":57}}},"4":{"name":"(anonymous_4)","line":143,"loc":{"start":{"line":143,"column":60},"end":{"line":143,"column":80}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"7":{"start":{"line":24,"column":0},"end":{"line":154,"column":1}},"8":{"start":{"line":25,"column":1},"end":{"line":25,"column":15}},"9":{"start":{"line":26,"column":1},"end":{"line":26,"column":20}},"10":{"start":{"line":28,"column":1},"end":{"line":28,"column":17}},"11":{"start":{"line":29,"column":1},"end":{"line":29,"column":24}},"12":{"start":{"line":30,"column":1},"end":{"line":30,"column":15}},"13":{"start":{"line":31,"column":1},"end":{"line":36,"column":2}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":40}},"15":{"start":{"line":43,"column":1},"end":{"line":49,"column":2}},"16":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"17":{"start":{"line":59,"column":1},"end":{"line":89,"column":2}},"18":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"19":{"start":{"line":62,"column":3},"end":{"line":62,"column":45}},"20":{"start":{"line":66,"column":2},"end":{"line":66,"column":29}},"21":{"start":{"line":66,"column":18},"end":{"line":66,"column":29}},"22":{"start":{"line":69,"column":2},"end":{"line":69,"column":27}},"23":{"start":{"line":75,"column":2},"end":{"line":75,"column":23}},"24":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"25":{"start":{"line":79,"column":3},"end":{"line":79,"column":23}},"26":{"start":{"line":83,"column":2},"end":{"line":83,"column":48}},"27":{"start":{"line":85,"column":2},"end":{"line":85,"column":42}},"28":{"start":{"line":88,"column":2},"end":{"line":88,"column":60}},"29":{"start":{"line":94,"column":1},"end":{"line":141,"column":2}},"30":{"start":{"line":95,"column":2},"end":{"line":95,"column":34}},"31":{"start":{"line":99,"column":6},"end":{"line":141,"column":2}},"32":{"start":{"line":100,"column":2},"end":{"line":100,"column":81}},"33":{"start":{"line":101,"column":2},"end":{"line":106,"column":3}},"34":{"start":{"line":102,"column":3},"end":{"line":102,"column":44}},"35":{"start":{"line":105,"column":3},"end":{"line":105,"column":12}},"36":{"start":{"line":111,"column":6},"end":{"line":141,"column":2}},"37":{"start":{"line":113,"column":2},"end":{"line":113,"column":24}},"38":{"start":{"line":115,"column":2},"end":{"line":120,"column":3}},"39":{"start":{"line":116,"column":3},"end":{"line":116,"column":20}},"40":{"start":{"line":118,"column":7},"end":{"line":120,"column":3}},"41":{"start":{"line":119,"column":3},"end":{"line":119,"column":36}},"42":{"start":{"line":126,"column":2},"end":{"line":140,"column":3}},"43":{"start":{"line":128,"column":3},"end":{"line":128,"column":32}},"44":{"start":{"line":130,"column":3},"end":{"line":130,"column":54}},"45":{"start":{"line":133,"column":3},"end":{"line":135,"column":4}},"46":{"start":{"line":134,"column":4},"end":{"line":134,"column":30}},"47":{"start":{"line":139,"column":3},"end":{"line":139,"column":12}},"48":{"start":{"line":143,"column":1},"end":{"line":147,"column":4}},"49":{"start":{"line":144,"column":2},"end":{"line":146,"column":15}},"50":{"start":{"line":150,"column":1},"end":{"line":150,"column":59}},"51":{"start":{"line":153,"column":1},"end":{"line":153,"column":20}},"52":{"start":{"line":156,"column":0},"end":{"line":156,"column":26}}},"branchMap":{"1":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"3":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":1},"end":{"line":94,"column":1}},{"start":{"line":94,"column":1},"end":{"line":94,"column":1}}]},"4":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"5":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":46},"end":{"line":100,"column":56}},{"start":{"line":100,"column":59},"end":{"line":100,"column":81}}]},"6":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"7":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":23}},{"start":{"line":112,"column":2},"end":{"line":112,"column":38}}]},"8":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"9":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":7},"end":{"line":115,"column":29}},{"start":{"line":115,"column":33},"end":{"line":115,"column":57}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":7},"end":{"line":118,"column":7}},{"start":{"line":118,"column":7},"end":{"line":118,"column":7}}]},"11":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":3},"end":{"line":133,"column":3}},{"start":{"line":133,"column":3},"end":{"line":133,"column":3}}]},"12":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":26},"end":{"line":143,"column":46}},{"start":{"line":143,"column":50},"end":{"line":143,"column":52}}]},"13":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":27},"end":{"line":150,"column":50}},{"start":{"line":150,"column":54},"end":{"line":150,"column":59}}]}},"code":["'use strict'","","var fs = require( 'fs' )","var path = require( 'path' )","var userHome = require( 'user-home' )","var pathIsAbsolute = require( 'path-is-absolute' )","var stripJsonComments = require( 'strip-json-comments' )","var Glob = require( 'glob' ).Glob","","// @TODO i just this sloppy just to fix some stuff","// comes back and refactor / cleanup","","/**"," * @description overrides default config with a new config object"," *              many potential code paths here."," * 1: user passed in config object via function param"," * 2: user passes location of .stylintrc file to use via cli"," * 3: user has options obj in package.json or path to"," * 4: none of the above, fallback to initial config"," * 5: user has a .stylintrc file in a dir but doesnt pass anything"," * @param {String} [configpath] If defined, the path to a config-file to read"," * @returns {Function} kick off linter again","*/","var setConfig = function( configpath ) {","\tvar files = []","\tvar customPath = ''","\t// return default config if nothing passed in or found","\tvar returnConfig","\tvar cwd = process.cwd()","\tvar pkg = null","\ttry {","\t\tpkg = require( cwd + '/package.json' )","\t}","\tcatch ( err ) {","\t\t// no output","\t}","","\t/**","\t * @description sets the return config if one if found","\t * @param  {string} path [where to look for config]","\t * @return {Object|void} [object if stylintrc found, undefined if not]","\t */","\tvar _parseConfig = function( path ) {","\t\treturn JSON.parse(","\t\t\tstripJsonComments(","\t\t\t\tfs.readFileSync( path, 'utf-8' )","\t\t\t)","\t\t)","\t}","","\t/**","\t * @description [reverse walk from cwd to usr]","\t *              [if .stylintrc found, use it]","\t * @param  {Array<string>} files [all files for this dir level]","\t * @param  {number} level [# of dirs traversed so far]","\t * @param  {string} cwd   [relative path to current directory being walked]","\t * @return {?Object|?Function} [config if found, recurse if not. null if failed]","\t */","\tvar _recurseDirectories = function( files, level, cwd ) {","\t\t// parse stylintrc if found, stop recursion","\t\tif ( files.indexOf( '.stylintrc' ) !== -1 ) {","\t\t\treturn _parseConfig( cwd + '/.stylintrc' )","\t\t}","","\t\t// only go up to user home directory, stop recursion","\t\tif ( userHome ) return null","","\t\t// next dir level","\t\tvar nextLevel = level + 1","\t\t// pathArr is generated by applying our dir level","\t\t// to cwd, and going backwards","\t\t// ie, level = 1, pathArr = [ cwd, '..' ]","\t\t// ie, level = 2, pathArr = [ cwd, '..', '..' ]","\t\t// and so on","\t\tvar pathArr = [ cwd ]","","\t\t// push '..' for each dir level","\t\twhile ( level-- ) {","\t\t\tpathArr.push( '..' )","\t\t}","","\t\t// creates the path to the next directory","\t\tvar newPath = path.join.apply( null, pathArr )","\t\t// gets the files for the next directory","\t\tvar newFiles = fs.readdirSync( newPath )","\t\t// passes the newFiles, nextLevel, and newPath to itself","\t\t// to start the process over again","\t\treturn _recurseDirectories( newFiles, nextLevel, newPath )","\t}","","\t// if 1, the customConfig will be what we want","\t// this only occurs if using stylint programmatically","\t// ie, user passed in option object","\tif ( this.customConfig ) {","\t\treturnConfig = this.customConfig","\t}","\t// if 2, we pass in a path to the config","\t// this only occurs if using stylint via the command line","\telse if ( configpath ) {","\t\tcustomPath = pathIsAbsolute( configpath ) ? configpath : cwd + '/' + configpath","\t\ttry {","\t\t\treturnConfig = _parseConfig( customPath )","\t\t}","\t\tcatch ( err ) {","\t\t\tthrow err","\t\t}","\t}","\t// 3, if user did not pass in option obj, or pass options via cli","\t// check the user's package.json for either an option obj, or","\t// at least a path to one","\telse if ( pkg !== null &&","\t\ttypeof pkg.stylintrc !== 'undefined' ) {","\t\tvar rc = pkg.stylintrc","","\t\tif ( typeof rc === 'object' && !( rc instanceof Array ) ) {","\t\t\treturnConfig = rc","\t\t}","\t\telse if ( typeof rc === 'string' ) {","\t\t\treturnConfig = _parseConfig( rc )","\t\t}","\t}","\t// 4, nothing passed in via cli or programmatically or via pkg","\t// start at cwd, walk up to user home directory, if nothing","\t// found, then just use the default config","\telse {","\t\ttry {","\t\t\t// recurse up to user home","\t\t\tfiles = fs.readdirSync( cwd )","\t\t\t// null if .stylintrc file found anywhere","\t\t\treturnConfig = _recurseDirectories( files, 1, cwd )","","\t\t\t// default config if nothing found","\t\t\tif ( !returnConfig ) {","\t\t\t\treturnConfig = this.config","\t\t\t}","\t\t}","\t\t// in case there's an issue parsing or no .stylintrc found at specified location","\t\tcatch ( err ) {","\t\t\tthrow err","\t\t}","\t}","","\treturnConfig.exclude = ( returnConfig.exclude || [] ).map( function( exclude ) {","\t\treturn new Glob( exclude, {","\t\t\tmatchBase: true","\t\t} ).minimatch","\t} )","","\t// make sure indentPref is set no matter what","\treturnConfig.indentPref = returnConfig.indentPref || false","","\t// 5, just return the default config if nothing found","\treturn returnConfig","}","","module.exports = setConfig",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"24":1,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"43":0,"44":0,"59":0,"61":0,"62":0,"66":0,"69":0,"75":0,"78":0,"79":0,"83":0,"85":0,"88":0,"94":0,"95":0,"99":0,"100":0,"101":0,"102":0,"105":0,"111":0,"113":0,"115":0,"116":0,"118":0,"119":0,"126":0,"128":0,"130":0,"133":0,"134":0,"139":0,"143":0,"144":0,"150":0,"153":0,"156":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/setContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/setContext.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":34}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":32,"column":1}},"2":{"start":{"line":9,"column":1},"end":{"line":9,"column":16}},"3":{"start":{"line":10,"column":1},"end":{"line":10,"column":73}},"4":{"start":{"line":12,"column":1},"end":{"line":12,"column":44}},"5":{"start":{"line":18,"column":1},"end":{"line":29,"column":2}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":41}},"7":{"start":{"line":22,"column":6},"end":{"line":29,"column":2}},"8":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"9":{"start":{"line":25,"column":3},"end":{"line":25,"column":17}},"10":{"start":{"line":28,"column":2},"end":{"line":28,"column":54}},"11":{"start":{"line":31,"column":1},"end":{"line":31,"column":15}},"12":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":18},"end":{"line":10,"column":47}},{"start":{"line":10,"column":51},"end":{"line":10,"column":73}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},{"start":{"line":18,"column":1},"end":{"line":18,"column":1}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]}},"code":["'use strict'","","/**"," * @description whitespace is the 1 tru god of stylus, set context based on that"," * @param {string} [line] curr line being linted"," * @returns {number} # of indents deep we are","*/","var setContext = function( line ) {","\tvar context = 0","\tvar indentPref = this.config.indentPref.expect || this.config.indentPref","","\tthis.state.prevContext = this.state.context","","\t// no matter what our indentPref is,","\t// try to get context as best as possible","","\t// get context if tabs","\tif ( line.charAt( 0 ) === '\\t' ) {","\t\tcontext = /^\\t+/.exec( line )[0].length","\t}","\t// get context if spaces","\telse if ( line.charAt( 0 ) === ' ' ) {","\t\t// set default if no indentPref set","\t\tif ( typeof indentPref !== 'number' ) {","\t\t\tindentPref = 2","\t\t}","","\t\tcontext = /^\\s+/.exec( line )[0].length / indentPref","\t}","","\treturn context","}","","module.exports = setContext",""],"l":{"8":1,"9":0,"10":0,"12":0,"18":0,"19":0,"22":0,"24":0,"25":0,"28":0,"31":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/splitAndStrip.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/splitAndStrip.js","s":{"1":1,"2":0,"3":0,"4":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":20},"end":{"line":9,"column":41}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":33},"end":{"line":10,"column":49}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":10,"column":1},"end":{"line":12,"column":4}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":23}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}}},"branchMap":{},"code":["'use strict'","","/**"," * @description alliteration. split a str according to re, and filter out empty indexes"," * @param {Object} [re] regex object for splitting"," * @param {string} [line] curr line being linted"," * @returns {Array} split and filtered array","*/","var splitAndStrip = function( re, line ) {","\treturn line.split( re ).filter( function( str ) {","\t\treturn str.length > 0","\t} )","}","","module.exports = splitAndStrip",""],"l":{"9":1,"10":0,"11":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/trimLine.js":{"path":"/home/travis/build/npmtest/node-npmtest-stylint/node_modules/stylint/src/utils/trimLine.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":15},"end":{"line":12,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":12,"column":0},"end":{"line":38,"column":1}},"3":{"start":{"line":13,"column":1},"end":{"line":13,"column":36}},"4":{"start":{"line":16,"column":1},"end":{"line":16,"column":30}},"5":{"start":{"line":17,"column":1},"end":{"line":17,"column":24}},"6":{"start":{"line":20,"column":1},"end":{"line":20,"column":48}},"7":{"start":{"line":23,"column":1},"end":{"line":34,"column":2}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":30}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":73}},"10":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":32,"column":3},"end":{"line":32,"column":54}},"12":{"start":{"line":37,"column":1},"end":{"line":37,"column":46}},"13":{"start":{"line":40,"column":0},"end":{"line":40,"column":25}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},{"start":{"line":23,"column":1},"end":{"line":23,"column":1}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["'use strict'","","var urlOrContentRe = /([\"'].+[\"'])|( +|:)url\\(.+\\)/","","/**"," * @description separate out line comments"," *              strip out interpolation"," *              strip out url and content strings"," * @param {string} [line] curr line being linted"," * @returns {string} the line, but minus all the annoying stuff","*/","var trimLine = function( line ) {","\tvar startsWithCommentRe = /(^\\/\\/)/","","\t// reset values from previous line","\tthis.state.hasComment = false","\tthis.cache.comment = ''","","\t// remove urls, content strings","\tvar noUrl = line.replace( urlOrContentRe, ' ' )","","\t// strip line comments, if any exist after stripping urls","\tif ( noUrl.indexOf( '//' ) !== -1 ) {","","\t\t// a for real line comment, no http:// false positive","\t\tthis.state.hasComment = true","\t\t// separate out line comment for spacing check","\t\tthis.cache.comment = noUrl.slice( noUrl.indexOf( '//' ), noUrl.length )","","\t\t// if this line comment is at the end of the line","\t\tif ( !startsWithCommentRe.test( noUrl.trim() ) ) {","\t\t\tnoUrl = noUrl.slice( 0, noUrl.indexOf( '//' ) - 1 )","\t\t}","\t}","","\t// strip interpolated variables","\treturn noUrl.replace( /( *{ *\\S+ *} *)/, '' )","}","","module.exports = trimLine",""],"l":{"3":1,"12":1,"13":0,"16":0,"17":0,"20":0,"23":0,"26":0,"28":0,"31":0,"32":0,"37":0,"40":1}}}